[
  
    {
      "title"    : "[PostgreSQL] Table Lock 종류와 호환성",
      "category" : "postgresql",
      "tags"     : "Database, RDBMS, PostgreSQL",
      "url"      : "/postgresql/2020/09/23/locking.html",
      "date"     : "2020-09-23 00:00:00 +0900",
      "content"   : "<h2 id=\"table-lock\">Table Lock</h2>\n<p><code class=\"highlighter-rouge\">멀티 트랜잭션 환경</code>에서 데이터베이스의 <code class=\"highlighter-rouge\">일관성</code>과 <code class=\"highlighter-rouge\">무결성</code>을 유지하기 위해서 <code class=\"highlighter-rouge\">트랜잭션의 순차적 진행</code>을 보장할 수 있어야 한다.\n이를 위해 Lock 기술이 등장했다.</p>\n\n<h3 id=\"shared-lock또는-read-lock\">Shared Lock(또는 Read Lock)</h3>\n<ul>\n  <li>원하는 데이터에 Lock을 걸었지만 다른 세션에서 읽을 수 있다.</li>\n  <li>Shared Lock은 허용되지만, Exclusive Lock은 불가능하다.</li>\n  <li>데이터를 다른 사용자가 동시 읽기만 가능하되 변경은 불가능하다.</li>\n</ul>\n\n<h3 id=\"exclusive-lock또는-write-lock\">Exclusive Lock(또는 Write Lock)</h3>\n<ul>\n  <li>Lock이 해제되기 전까지는 다른 세션에서 읽기, 쓰기 불가능하다.</li>\n  <li>Share Lock, Exclusive Lock 불가능하다.</li>\n  <li>데이터 변경 시 사용되며, 트랜잭션이 완료될 때까지 유지된다.</li>\n</ul>\n\n<h3 id=\"postgresql-table-lock-호환성\">PostgreSQL Table Lock 호환성</h3>\n<ul>\n  <li>Table Lock Mode에 따라 공존할 수 있는 Lock이 있고, Conflict가 나는 Lock이 있다.</li>\n</ul>\n\n<p><img src=\"/assets/posts/database/table-lock-mode.png\" alt=\"\" /></p>\n"
    } ,
  
    {
      "title"    : "[Hacker Rank] Modified Kaprekar Numbers",
      "category" : "hackerrank",
      "tags"     : "Algorithm, HackerRank, Javascript",
      "url"      : "/hackerrank/2020/09/20/kaprekar-numbers.html",
      "date"     : "2020-09-20 00:00:00 +0900",
      "content"   : "<h2 id=\"modified-kaprekar-numbers--easy\"><a href=\"https://www.hackerrank.com/challenges/kaprekar-numbers/problem\">Modified Kaprekar Numbers</a> | Easy</h2>\n\n<p>A modified Kaprekar number is a positive whole number with a special property.\nIf you square it, then split the number into two integers and sum those integers, you have the same value you started with.\nConsider a positive whole number n with d digits.\nWe square n to arrive at a number that is either 2 X d digits long or (2 X d) - 1 digits long.\nSplit the string representation of the square into two parts, l and r.\nThe right hand part, r must be d digits long. The left is the remaining substring. Convert those two substrings back to integers, add them and see if you get n.\nFor example, if n = 5, d = 1 then n^2 = 25.\nWe split that into two strings and convert them back to integers 2 and 5.\nWe test 2 + 5 != 5, so this is not a modified Kaprekar number.\nIf n = 9, still d = 1 and n^2 = 81. This gives us 1 + 8 = 9, the original n.</p>\n\n<p><strong>Note:</strong> r nay have leading zeros.</p>\n\n<p>Here’s an explanation from Wikipedia about the ORIGINAL <a href=\"https://en.wikipedia.org/wiki/Kaprekar_number\">Kaprekar Number</a> (spot the difference!):</p>\n\n<blockquote>\n  <p>In mathematics, a Kaprekar number for a given base is a non-negative integer, the representation of whose square in that base can be split into two parts that add up to the original number again. For instance, 45 is a Kaprekar number, because 45² = 2025 and 20+25 = 45.</p>\n</blockquote>\n\n<p>Given two positive integers p and q where p is lower than q, write a program to print the modified Kaprekar numbers in the range between p and q, inclusive.</p>\n\n<h4 id=\"function-description\">Function Description</h4>\n\n<p>Complete the kaprekarNumbers function in the editor below. It should print the list of modified Kaprekar numbers in ascending order.</p>\n\n<p>kaprekarNumbers has the following parameter(s):</p>\n\n<ul>\n  <li>p: an integer</li>\n  <li>q: an integer</li>\n</ul>\n\n<h4 id=\"input-format\">Input Format</h4>\n\n<p>The first line contains the lower integer limit p.\nThe second line contains the upper integer limit q.</p>\n\n<p><strong>Note:</strong> Your range should be inclusive of the limits.</p>\n\n<h4 id=\"output-format\">Output Format</h4>\n\n<p>Output each modified Kaprekar number in the given range, space-separated on a single line.\nIf no modified Kaprekar numbers exist in the given range, print INVALID RANGE.</p>\n\n<h4 id=\"sample-input\">Sample Input</h4>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>1\n100\n</code></pre></div></div>\n\n<h4 id=\"sample-output\">Sample Output</h4>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>1 9 45 55 99\n</code></pre></div></div>\n\n<h3 id=\"my-solution\">My Solution</h3>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">function</span> <span class=\"nx\">kaprekarNumbers</span><span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">,</span> <span class=\"nx\">q</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">result</span> <span class=\"o\">=</span> <span class=\"p\">[...</span><span class=\"nb\">Array</span><span class=\"p\">(</span><span class=\"nx\">q</span> <span class=\"o\">-</span> <span class=\"nx\">p</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)].</span><span class=\"nx\">reduce</span><span class=\"p\">((</span><span class=\"nx\">a</span><span class=\"p\">,</span> <span class=\"nx\">_</span><span class=\"p\">,</span> <span class=\"nx\">i</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">number</span> <span class=\"o\">=</span> <span class=\"nx\">p</span> <span class=\"o\">+</span> <span class=\"nx\">i</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">sqrt</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">number</span> <span class=\"o\">*</span> <span class=\"nx\">number</span><span class=\"p\">).</span><span class=\"nx\">toString</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">number</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">number</span>\n\n    <span class=\"kd\">const</span> <span class=\"nx\">floor</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">floor</span><span class=\"p\">(</span><span class=\"nx\">sqrt</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n    <span class=\"kd\">const</span> <span class=\"p\">[</span><span class=\"nx\">front</span><span class=\"p\">,</span> <span class=\"nx\">rear</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n      <span class=\"nx\">sqrt</span><span class=\"p\">.</span><span class=\"nx\">substr</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">floor</span><span class=\"p\">),</span>\n      <span class=\"nx\">sqrt</span><span class=\"p\">.</span><span class=\"nx\">substr</span><span class=\"p\">(</span><span class=\"nx\">floor</span><span class=\"p\">,</span> <span class=\"nx\">sqrt</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"o\">+</span><span class=\"nx\">front</span> <span class=\"o\">+</span> <span class=\"o\">+</span><span class=\"nx\">rear</span><span class=\"p\">)</span> <span class=\"o\">===</span> <span class=\"nx\">number</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">a</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">a</span> <span class=\"p\">?</span> <span class=\"nx\">number</span> <span class=\"p\">:</span> <span class=\"s2\">` </span><span class=\"p\">${</span><span class=\"nx\">number</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"nx\">a</span>\n  <span class=\"p\">},</span> <span class=\"s1\">''</span><span class=\"p\">)</span>\n\n  <span class=\"k\">return</span> <span class=\"nx\">result</span> <span class=\"o\">||</span> <span class=\"s1\">'INVALID RANGE'</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">r1</span> <span class=\"o\">=</span> <span class=\"nx\">kaprekarNumbers</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`실행 결과: </span><span class=\"p\">${</span><span class=\"nx\">r1</span><span class=\"p\">}</span><span class=\"s2\">, 기대값: 1 9 45 55 99`</span><span class=\"p\">)</span>\n<span class=\"kd\">const</span> <span class=\"nx\">r2</span> <span class=\"o\">=</span> <span class=\"nx\">kaprekarNumbers</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">)</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`실행 결과: </span><span class=\"p\">${</span><span class=\"nx\">r2</span><span class=\"p\">}</span><span class=\"s2\">, 기대값: 297`</span><span class=\"p\">)</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Hacker Rank] Extra Long Factorials",
      "category" : "hackerrank",
      "tags"     : "Algorithm, HackerRank, Javascript",
      "url"      : "/hackerrank/2020/09/19/extra-long-factorials.html",
      "date"     : "2020-09-19 00:00:00 +0900",
      "content"   : "<h2 id=\"extra-long-factorials--medium\"><a href=\"https://www.hackerrank.com/challenges/extra-long-factorials/problem\">Extra Long Factorials</a> | Medium</h2>\n\n<p>The factorial of the integer n, written n!, is defined as:</p>\n\n<blockquote>\n  <p>n! = n X (n - 1) X (n - 2) X … X 3 X 2 X 1</p>\n</blockquote>\n\n<p>Calculate and print the factorial of a given integer.</p>\n\n<p>For example, if n = 30, we calculate 30 X 29 X 28 X … X 2 X 1 and get 265252859812191058636308480000000.</p>\n\n<h4 id=\"function-description\">Function Description</h4>\n\n<p>Complete the extraLongFactorials function in the editor below. It should print the result and return.</p>\n\n<p>extraLongFactorials has the following parameter(s):</p>\n\n<ul>\n  <li>n: an integer</li>\n</ul>\n\n<p><strong>Note:</strong> Factorials of n &gt; 20 can’t be stored even in a 64 - bit long long variable.\nBig integers must be used for such calculations. Languages like Java, Python, Ruby etc. can handle big integers, but we need to write additional code in C/C++ to handle huge values.</p>\n\n<p>We recommend solving this challenge using BigIntegers.</p>\n\n<h4 id=\"input-format\">Input Format</h4>\n\n<p>Input consists of a single integer n</p>\n\n<h4 id=\"output-format\">Output Format</h4>\n\n<p>Print the factorial of n.</p>\n\n<h4 id=\"sample-input\">Sample Input</h4>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>25\n</code></pre></div></div>\n\n<h4 id=\"sample-output\">Sample Output</h4>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>15511210043330985984000000\n</code></pre></div></div>\n\n<h3 id=\"my-solution\">My Solution</h3>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">function</span> <span class=\"nx\">extraLongFactorials</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"p\">[...</span><span class=\"nb\">Array</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">)].</span><span class=\"nx\">reduce</span><span class=\"p\">((</span><span class=\"nx\">a</span><span class=\"p\">,</span> <span class=\"nx\">_</span><span class=\"p\">,</span> <span class=\"nx\">i</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">a</span> <span class=\"o\">*</span> <span class=\"nx\">BigInt</span><span class=\"p\">(</span><span class=\"nx\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"mi\">1</span><span class=\"nx\">n</span><span class=\"p\">).</span><span class=\"nx\">toString</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">r1</span> <span class=\"o\">=</span> <span class=\"nx\">extraLongFactorials</span><span class=\"p\">(</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`실행 결과: </span><span class=\"p\">${</span><span class=\"nx\">r1</span><span class=\"p\">}</span><span class=\"s2\">, 기대값: 15511210043330985984000000`</span><span class=\"p\">)</span>\n<span class=\"kd\">const</span> <span class=\"nx\">r2</span> <span class=\"o\">=</span> <span class=\"nx\">extraLongFactorials</span><span class=\"p\">(</span><span class=\"mi\">45</span><span class=\"p\">)</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`실행 결과: </span><span class=\"p\">${</span><span class=\"nx\">r2</span><span class=\"p\">}</span><span class=\"s2\">, 기대값: 119622220865480194561963161495657715064383733760000000000`</span><span class=\"p\">)</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Hacker Rank] Equalize the Array",
      "category" : "hackerrank",
      "tags"     : "Algorithm, HackerRank, Javascript",
      "url"      : "/hackerrank/2020/09/18/equality-in-a-array.html",
      "date"     : "2020-09-18 00:00:00 +0900",
      "content"   : "<h2 id=\"equalize-the-array--easy\"><a href=\"https://www.hackerrank.com/challenges/equality-in-a-array/problem\">Equalize the Array</a> | Easy</h2>\n\n<p>Karl has an array of integers. He wants to reduce the array until all remaining elements are equal. Determine the minimum number of elements to delete to reach his goal.</p>\n\n<p>For example, if his array is <code class=\"highlighter-rouge\">arr = [1, 2, 2, 3]</code>, we see that he can delete the 2 elements 1 and 3 leaving <code class=\"highlighter-rouge\">arr = [2, 2]</code>.\nHe could also delete both twos and either the 1 or the 3, but that would take 3 deletions.</p>\n\n<p>The minimum number of deletions is 2.</p>\n\n<h4 id=\"function-description\">Function Description</h4>\n\n<p>Complete the equalizeArray function in the editor below. It must return an integer that denotes the minimum number of deletions required.</p>\n\n<p>equalizeArray has the following parameter(s):</p>\n\n<ul>\n  <li>arr: an array of integers</li>\n</ul>\n\n<h4 id=\"input-format\">Input Format</h4>\n\n<p>The first line contains an integer n, the number of elements in arr.\nThe next line contains n space-separated integers arr[i].</p>\n\n<h4 id=\"output-format\">Output Format</h4>\n\n<p>Print a single integer that denotes the minimum number of elements Karl must delete for all elements in the array to be equal.</p>\n\n<h4 id=\"sample-input\">Sample Input</h4>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>5\n3 3 2 1 3\n</code></pre></div></div>\n\n<h4 id=\"sample-output\">Sample Output</h4>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>2\n</code></pre></div></div>\n\n<h3 id=\"my-solution\">My Solution</h3>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">function</span> <span class=\"nx\">equalizeArray</span><span class=\"p\">(</span><span class=\"nx\">arr</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">numMap</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">maxValue</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n  <span class=\"k\">return</span> <span class=\"nx\">arr</span><span class=\"p\">.</span><span class=\"nx\">reduce</span><span class=\"p\">((</span><span class=\"nx\">a</span><span class=\"p\">,</span> <span class=\"nx\">c</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">numMap</span><span class=\"p\">[</span><span class=\"nx\">c</span><span class=\"p\">])</span> <span class=\"p\">{</span>\n      <span class=\"nx\">numMap</span><span class=\"p\">[</span><span class=\"nx\">c</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n      <span class=\"nx\">numMap</span><span class=\"p\">[</span><span class=\"nx\">c</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kd\">const</span> <span class=\"nx\">value</span> <span class=\"o\">=</span> <span class=\"nx\">numMap</span><span class=\"p\">[</span><span class=\"nx\">c</span><span class=\"p\">]</span> <span class=\"o\">||</span> <span class=\"mi\">1</span>\n    <span class=\"nx\">a</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">value</span> <span class=\"o\">&gt;</span> <span class=\"nx\">maxValue</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">a</span> <span class=\"o\">-=</span> <span class=\"p\">(</span><span class=\"nx\">value</span> <span class=\"o\">-</span> <span class=\"nx\">maxValue</span><span class=\"p\">)</span>\n      <span class=\"nx\">maxValue</span> <span class=\"o\">=</span> <span class=\"nx\">value</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"nx\">a</span>\n  <span class=\"p\">},</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">r1</span> <span class=\"o\">=</span> <span class=\"nx\">equalizeArray</span><span class=\"p\">([</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`실행 결과: </span><span class=\"p\">${</span><span class=\"nx\">r1</span><span class=\"p\">}</span><span class=\"s2\">, 기대값: 2`</span><span class=\"p\">)</span>\n<span class=\"kd\">const</span> <span class=\"nx\">r2</span> <span class=\"o\">=</span> <span class=\"nx\">equalizeArray</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`실행 결과: </span><span class=\"p\">${</span><span class=\"nx\">r2</span><span class=\"p\">}</span><span class=\"s2\">, 기대값: 4`</span><span class=\"p\">)</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Javascript] Prototype 객체",
      "category" : "javascript",
      "tags"     : "Javascript, OOP, Functional Programming",
      "url"      : "/javascript/2020/09/13/prototype.html",
      "date"     : "2020-09-13 00:00:00 +0900",
      "content"   : "<h3 id=\"자바스크립트는-함수형-프로그래밍-언어\">자바스크립트는 함수형 프로그래밍 언어?</h3>\n<p>어느 날, 이 아무개 친구가 나에게 물었다.\n“Javascript는 함수형 프로그래밍 언어잖아, 다른 객체지향 프로그래밍 언어와 비교해서 말해줄 수 있어?”\n그 질문을 듣고 나는 Javascript가 함수형 프로그래밍 언어라고 생각하면서 사용한 적이 없는데 왜 저런 질문을 할까?라는 생각이 들었다.</p>\n\n<p>사실 나는 함수형 프로그래밍 언어에 대해 잘 모른다. 그런데 어떻게 Javascript는 함수형 프로그래밍 언어라고 생각하고 사용한 적이 없다고 결단을 내렸을까?\n함수형 프로그래밍 언어의 <code class=\"highlighter-rouge\">언어</code>를 <code class=\"highlighter-rouge\">사고</code>로 치환해서 생각해 보았다.\n그렇다. 그 동안 나는 Javascript를 객체지향 프로그래밍 사고에 입각해서 사용해 왔던 것이다.</p>\n\n<p>Javascript에는 함수형 프로그래밍을 할 수 있도록 도와주는 기능이 있지만 나는 함수형으로 사고하여 프로그래밍을 한 적이 없다.\n어떻게 Javascript에서 객체지향 프로그래밍을 했던 걸까? 객체지향 프로그래밍을 할 수 있도록 해준 <code class=\"highlighter-rouge\">프로토타입</code>에 대해 알아보고자 한다.</p>\n\n<h3 id=\"프로토타입\">프로토타입</h3>\n<p>우리가 흔히 알고 있는 Java나 C++는 클래스를 기반으로 객체지향 프로그래밍이 가능하다. 이와 달리 자바스크립트는 프로토타입을 기반으로 객체지향 프로그래밍을 할 수 있다.\nJavascript는 클래스를 통해 객체를 생성하지 않고 클래스 없이 객체를 생성할 수 있다. (하지만 ES2015부터 class 키워드를 지원하기 시작했으나, 문법적인 양념일 뿐이며 자바스크립트는 여전히 프로토타입 기반의 언어다.)</p>\n\n<p>Javascript의 모든 객체는 자신의 부모 역할을 담당하고 있는 객체와 연결되어 있고, 부모 역할을 담당하고 있는 객체의 프로퍼티를 상송 받아 사용할 수 있다.\n부모 역할을 담당하는 객체를 일컫어 <code class=\"highlighter-rouge\">프로토타입</code>이라고 한다.</p>\n\n<h3 id=\"prototype\">[[Prototype]]</h3>\n<p>각각의 객체는 <code class=\"highlighter-rouge\">[[Prototype]]</code>이라는 속성을 가지는데 자신의 프로토타입이 되는 다른 객체를 가리킨다.\n<code class=\"highlighter-rouge\">[[Prototype]]</code>의 값은 null 또는 <code class=\"highlighter-rouge\">[[Prototype]]</code> 객체이며 <code class=\"highlighter-rouge\">__proto__</code> accessor property로 접근할 수 있다.</p>\n\n<p>아래 코드를 보자.\npockmon 객체는 <code class=\"highlighter-rouge\">__proto__</code> 프로퍼티로 자신의 부모 객체인 <code class=\"highlighter-rouge\">Object.prototype</code>을 가리킨다.</p>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">const</span> <span class=\"nx\">pokemon</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s1\">'피카츄'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">pokemon</span><span class=\"p\">.</span><span class=\"nx\">__proto__</span> <span class=\"o\">===</span> <span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">)</span> <span class=\"c1\">// true</span>\n</code></pre></div></div>\n\n<p>도대체 <code class=\"highlighter-rouge\">__proto__</code>는 무엇일까?</p>\n\n<p>우리가 pokemon 객체의 프로퍼티에 접근할 때, 우선 pokemon 객체가 프로퍼티를 갖고 있는지 확인한다.\n프로퍼티를 갖고 있지 않을 때에는 pokemon 객체의 <code class=\"highlighter-rouge\">__proto__</code>가 프로퍼티를 갖고 있는지 확인한다.\n만약 프로퍼티를 pokemon 객체의 <code class=\"highlighter-rouge\">__proto__</code>에서 찾을 수 없다면 그 다음엔 pokemon 객체의 <code class=\"highlighter-rouge\">__proto__</code>의 <code class=\"highlighter-rouge\">__proto__</code>에서 찾을 것이다.</p>\n\n<p>이와 같이 계속 <code class=\"highlighter-rouge\">__proto__</code> 에서 값을 찾고 <code class=\"highlighter-rouge\">__proto__</code>가 없을 때 비로소 프로토타입 체이닝 검사를 마치고 프로퍼티의 값이 <code class=\"highlighter-rouge\">undfined</code>라고 결론 짓는다.</p>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">const</span> <span class=\"nx\">pokemon</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s1\">'피카츄'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">pokemon</span><span class=\"p\">.</span><span class=\"nx\">__proto__</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"s1\">'전기'</span> <span class=\"p\">}</span>\n<span class=\"nx\">pokemon</span><span class=\"p\">.</span><span class=\"nx\">__proto__</span><span class=\"p\">.</span><span class=\"nx\">__proto__</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"na\">attack</span><span class=\"p\">:</span> <span class=\"s1\">'10만볼트'</span> <span class=\"p\">}</span>\n\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">pokemon</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">)</span> <span class=\"c1\">// 피카츄</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">pokemon</span><span class=\"p\">.</span><span class=\"nx\">type</span><span class=\"p\">)</span> <span class=\"c1\">// 전기</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">pokemon</span><span class=\"p\">.</span><span class=\"nx\">attack</span><span class=\"p\">)</span> <span class=\"c1\">// 10만볼트</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">pokemon</span><span class=\"p\">.</span><span class=\"nx\">gender</span><span class=\"p\">)</span> <span class=\"c1\">// undefined</span>\n</code></pre></div></div>\n\n<p>객체를 생성할 때 프로토타입은 결정된다. 결정된 프로토타입 객체는 다른 임의의 객체로 변경할 수 있다. 이것은 부모 객체인 프로토타입을 동적으로 변경할 수 있다는 것을 의미한다.\n이러한 특징을 활용하여 객체의 상속을 구현할 수 있다.</p>\n\n<h3 id=\"함수-객체의-prototype-프로퍼티\">함수 객체의 prototype 프로퍼티</h3>\n<p>함수도 객체이므로 <code class=\"highlighter-rouge\">[[Prototype]]</code>을 갖는다. 그러나 함수 객체는 일반 객체와 달리 <code class=\"highlighter-rouge\">prototype</code> 프로퍼티도 갖는다.</p>\n\n<h4 id=\"prototype-1\">[[Prototype]]</h4>\n<ul>\n  <li>함수를 포함한 모든 객체가 가지고 있다.</li>\n  <li>객체의 입장에서 자신의 부모 역할을 하는 프로토타입 객체를 가리키며 함수 객체의 경우 <code class=\"highlighter-rouge\">Function.prototype</code>을 가리킨다.</li>\n</ul>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">function</span> <span class=\"nx\">Pokemon</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">name</span> <span class=\"o\">=</span> <span class=\"nx\">name</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">Pokemon</span><span class=\"p\">.</span><span class=\"nx\">__proto__</span> <span class=\"o\">===</span> <span class=\"nb\">Function</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">)</span> <span class=\"c1\">// true</span>\n</code></pre></div></div>\n\n<h4 id=\"prototype-프로퍼티\">prototype 프로퍼티</h4>\n<ul>\n  <li>함수 객체만 가지고 있는 프로퍼티이다.</li>\n  <li>함수 객체가 생성자로 사용될 때 생성된 인스턴스의 부모 역할을 하는 객체(프로토타입)를 가리킨다.</li>\n</ul>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">function</span> <span class=\"nx\">Pokemon</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">name</span> <span class=\"o\">=</span> <span class=\"nx\">name</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">pikachu</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">Pokemon</span><span class=\"p\">(</span><span class=\"s1\">'피카츄'</span><span class=\"p\">)</span>\n\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">dir</span><span class=\"p\">(</span><span class=\"nx\">Pokemon</span><span class=\"p\">)</span> <span class=\"c1\">// prototype 프로퍼티가 있다.</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">dir</span><span class=\"p\">(</span><span class=\"nx\">pikachu</span><span class=\"p\">)</span> <span class=\"c1\">// prototype 프로퍼티가 없다.</span>\n\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">Pokemon</span><span class=\"p\">.</span><span class=\"nx\">prototype</span> <span class=\"o\">===</span> <span class=\"nx\">pikachu</span><span class=\"p\">.</span><span class=\"nx\">__proto__</span><span class=\"p\">)</span> <span class=\"c1\">// true</span>\n</code></pre></div></div>\n\n<h2 id=\"참고-자료\">참고 자료</h2>\n<ul>\n  <li><a href=\"https://poiemaweb.com/js-prototype\">Poiemaweb - 5.14 Prototype</a></li>\n  <li><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Inheritance_and_the_prototype_chain\">MDN - 상속과 프로토타입</a></li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Hacker Rank] The Bomberman Game",
      "category" : "hackerrank",
      "tags"     : "Algorithm, HackerRank, Javascript",
      "url"      : "/hackerrank/2020/09/13/bomberman.html",
      "date"     : "2020-09-13 00:00:00 +0900",
      "content"   : "<h2 id=\"the-bomberman-game--medium\"><a href=\"https://www.hackerrank.com/challenges/bomber-man/problem\">The Bomberman Game</a> | Medium</h2>\n\n<p>Bomberman lives in a rectangular grid. Each cell in the grid either contains a bomb or nothing at all.</p>\n\n<p>Each bomb can be planted in any cell of the grid but once planted, it will detonate after exactly 3 seconds.\nOnce a bomb detonates, it’s destroyed — along with anything in its four neighboring cells. \nThis means that if a bomb detonates in cell i, j, any valid cells (i ± 1, j) and (i, j ± 1) are cleared.\nIf there is a bomb in a neighboring cell, the neighboring bomb is destroyed without detonating, so there’s no chain reaction.</p>\n\n<p>Bomberman is immune to bombs, so he can move freely throughout the grid. Here’s what he does:</p>\n<ul>\n  <li>Initially, Bomberman arbitrarily plants bombs in some of the cells, the initial state.</li>\n  <li>After one second, Bomberman does nothing.</li>\n  <li>After one more second, Bomberman plants bombs in all cells without bombs, thus filling the whole grid with bombs. No bombs detonate at this point.</li>\n  <li>After one more second, any bombs planted exactly three seconds ago will detonate. Here, Bomberman stands back and observes.</li>\n  <li>Bomberman then repeats steps 3 and 4 indefinitely.</li>\n</ul>\n\n<p>Note that during every second Bomberman plants bombs, the bombs are planted simultaneously (i.e., at the exact same moment), and any bombs planted at the same time will detonate at the same time.</p>\n\n<p>Given the initial configuration of the grid with the locations of Bomberman’s first batch of planted bombs, determine the state of the grid after N seconds.</p>\n\n<h4 id=\"function-description\">Function Description</h4>\n\n<p>Complete the bomberMan function in the editory below. It should return an array of strings that represent the grid in its final state.</p>\n\n<p>bomberMan has the following parameter(s):</p>\n\n<ul>\n  <li>n: an integer, the number of seconds to simulate</li>\n  <li>grid: an array of strings that represents the grid</li>\n</ul>\n\n<h4 id=\"input-format\">Input Format</h4>\n\n<p>The first line contains three space-separated integers r, c, and n, The number of rows, columns and seconds to simulate.\nEach of the next r lines contains a row of the matrix as a single string of c characters. The . character denotes an empty cell, and the O character (ascii 79) denotes a bomb.</p>\n\n<h4 id=\"output-format\">Output Format</h4>\n\n<p>Print the grid’s final state. This means R lines where each line contains C characters, and each character is either a . or an O (ascii 79). This grid must represent the state of the grid after n seconds.</p>\n\n<h3 id=\"my-solution-feat-javascript\">My Solution (feat. Javascript)</h3>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">function</span> <span class=\"nx\">bomberMan</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">,</span> <span class=\"nx\">grid</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">n</span> <span class=\"o\">===</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">grid</span>\n\n  <span class=\"kd\">let</span> <span class=\"nx\">g</span> <span class=\"o\">=</span> <span class=\"nx\">plantbombs</span><span class=\"p\">(</span><span class=\"nx\">grid</span><span class=\"p\">)</span>\n\n  <span class=\"nx\">grid</span> <span class=\"o\">=</span> <span class=\"nx\">grid</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">((</span><span class=\"nx\">c</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">c</span><span class=\"p\">.</span><span class=\"nx\">split</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">))</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">x</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">n</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">2</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">y</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">floor</span><span class=\"p\">((</span><span class=\"nx\">n</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">2</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">x</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">detonate</span><span class=\"p\">(</span><span class=\"nx\">grid</span><span class=\"p\">,</span> <span class=\"nx\">g</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">y</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">grid</span> <span class=\"o\">=</span> <span class=\"p\">[...</span><span class=\"nx\">g</span><span class=\"p\">]</span>\n      <span class=\"nx\">g</span> <span class=\"o\">=</span> <span class=\"nx\">plantbombs</span><span class=\"p\">(</span><span class=\"nx\">grid</span><span class=\"p\">)</span>\n      <span class=\"nx\">detonate</span><span class=\"p\">(</span><span class=\"nx\">grid</span><span class=\"p\">,</span> <span class=\"nx\">g</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"nx\">g</span> <span class=\"o\">=</span> <span class=\"nx\">plantbombs</span><span class=\"p\">(</span><span class=\"nx\">grid</span><span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"k\">return</span> <span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">((</span><span class=\"nx\">c</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">c</span><span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">plantbombs</span><span class=\"p\">(</span><span class=\"nx\">grid</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"nb\">Array</span><span class=\"p\">.</span><span class=\"k\">from</span><span class=\"p\">(</span><span class=\"nb\">Array</span><span class=\"p\">(</span><span class=\"nx\">grid</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">),</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"nb\">Array</span><span class=\"p\">(</span><span class=\"nx\">grid</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"nx\">length</span><span class=\"p\">).</span><span class=\"nx\">fill</span><span class=\"p\">(</span><span class=\"s1\">'O'</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">detonate</span><span class=\"p\">(</span><span class=\"nx\">grid</span><span class=\"p\">,</span> <span class=\"nx\">g</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"p\">(</span><span class=\"nx\">grid</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">);</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">grid</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">].</span><span class=\"nx\">forEach</span><span class=\"p\">((</span><span class=\"nx\">cell</span><span class=\"p\">,</span> <span class=\"nx\">j</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">cell</span> <span class=\"o\">===</span> <span class=\"s1\">'O'</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">g</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">][</span><span class=\"nx\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'.'</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">g</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">][</span><span class=\"nx\">j</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"nx\">g</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">][</span><span class=\"nx\">j</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'.'</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">g</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">][</span><span class=\"nx\">j</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"nx\">g</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">][</span><span class=\"nx\">j</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'.'</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">g</span><span class=\"p\">[</span><span class=\"nx\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"nx\">g</span><span class=\"p\">[</span><span class=\"nx\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"nx\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'.'</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">g</span><span class=\"p\">[</span><span class=\"nx\">i</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"nx\">g</span><span class=\"p\">[</span><span class=\"nx\">i</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"nx\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'.'</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span> <span class=\"s1\">''</span><span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">r1</span> <span class=\"o\">=</span> <span class=\"nx\">bomberMan</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'.......'</span><span class=\"p\">,</span> <span class=\"s1\">'...O...'</span><span class=\"p\">,</span> <span class=\"s1\">'....O..'</span><span class=\"p\">,</span> <span class=\"s1\">'.......'</span><span class=\"p\">,</span> <span class=\"s1\">'OO.....'</span><span class=\"p\">,</span> <span class=\"s1\">'OO.....'</span><span class=\"p\">])</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`실행 결과: </span><span class=\"p\">${</span><span class=\"nx\">r1</span><span class=\"p\">}</span><span class=\"s2\">, 기대값: </span><span class=\"p\">${[</span><span class=\"s1\">'OOO.OOO'</span><span class=\"p\">,</span> <span class=\"s1\">'OO...OO'</span><span class=\"p\">,</span> <span class=\"s1\">'OOO...O'</span><span class=\"p\">,</span> <span class=\"s1\">'..OO.OO'</span><span class=\"p\">,</span> <span class=\"s1\">'...OOOO'</span><span class=\"p\">,</span> <span class=\"s1\">'...OOOO'</span><span class=\"p\">]}</span><span class=\"s2\">`</span><span class=\"p\">)</span>\n<span class=\"kd\">const</span> <span class=\"nx\">r2</span> <span class=\"o\">=</span> <span class=\"nx\">bomberMan</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'.......'</span><span class=\"p\">,</span> <span class=\"s1\">'...O.O.'</span><span class=\"p\">,</span> <span class=\"s1\">'....O..'</span><span class=\"p\">,</span> <span class=\"s1\">'..O....'</span><span class=\"p\">,</span> <span class=\"s1\">'OO...OO'</span><span class=\"p\">,</span> <span class=\"s1\">'OO.O...'</span><span class=\"p\">])</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`실행 결과: </span><span class=\"p\">${</span><span class=\"nx\">r2</span><span class=\"p\">}</span><span class=\"s2\">, 기대값: </span><span class=\"p\">${[</span><span class=\"s1\">'.......'</span><span class=\"p\">,</span> <span class=\"s1\">'...O.O.'</span><span class=\"p\">,</span> <span class=\"s1\">'...OO..'</span><span class=\"p\">,</span> <span class=\"s1\">'..OOOO.'</span><span class=\"p\">,</span> <span class=\"s1\">'OOOOOOO'</span><span class=\"p\">,</span> <span class=\"s1\">'OOOOOOO'</span><span class=\"p\">]}</span><span class=\"s2\">`</span><span class=\"p\">)</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Redis] INCR 명령어와 INCRBYFLOAT 명령어",
      "category" : "redis",
      "tags"     : "Database, NoSQL, Redis",
      "url"      : "/redis/2020/09/12/incr-and-expire.html",
      "date"     : "2020-09-12 00:00:00 +0900",
      "content"   : "<h2 id=\"incr\">INCR</h2>\n<ul>\n  <li>숫자를 1씩 증가시킨다.</li>\n  <li>데이터베이스에 KEY가 없을 경우, KEY를 SET하고 0을 기준으로 1을 더한다.</li>\n  <li>단, VALUE가 레디스의 가장 큰 야의 정수 범위(2^63 − 1)를 초과했을 경우 에러가 발생한다.</li>\n</ul>\n\n<pre><code class=\"language-redis\">&gt; SET count 0\nOK\n&gt; INCR count\n1\n&gt; INCR count\n2\n&gt; GET count\n\"2\"\n&gt; DEL count\n1\n&gt; INCR count\n1\n&gt; GET count\n\"1\"\n&gt; SET count 234293482390480948029348230948\nOK\n&gt; INCR count\nERR value is not an integer or out of range\n</code></pre>\n\n<h2 id=\"incrbyfloat\">INCRBYFLOAT</h2>\n<ul>\n  <li>지정한 숫자만큼 증가시킨다.</li>\n  <li>데이터베이스에 KEY가 없을 경우, KEY를 SET하고 0을 기준으로 지정한 숫자만큼 더한다.</li>\n  <li>음수도 지정할 수 있다.</li>\n</ul>\n\n<pre><code class=\"language-redis\">&gt; SET count 0\nOK\n&gt; INCRBYFLOAT count 0.3\n\"0.3\"\n&gt; INCRBYFLOAT count 0.3\n\"0.6\"\n&gt; DEL count\n1\n&gt; INCRBYFLOAT count 0.3\n\"0.3\"\n&gt; INCRBYFLOAT count 0.3\n\"0.6\"\n&gt; INCRBYFLOAT count -0.3\n\"0.3\"\n&gt; INCRBYFLOAT count -0.3\n\"0\"\n</code></pre>\n"
    } ,
  
    {
      "title"    : "[Redis] In-Memory 데이터베이스",
      "category" : "redis",
      "tags"     : "Database, NoSQL, Redis",
      "url"      : "/redis/2020/09/12/in-memory-database.html",
      "date"     : "2020-09-12 00:00:00 +0900",
      "content"   : "<h2 id=\"인-메모리-데이터베이스\">인-메모리 데이터베이스</h2>\n<p>인-메모리 데이터베이스는 NoSQL 방식에 속하며, 데이터 스토리지가 <code class=\"highlighter-rouge\">메인 메모리</code>에 설치되어 운영되는 방식의 데이터베이스 시스템이다.</p>\n\n<h2 id=\"디스크전통-데이터베이스-vs-인-메모리-데이터베이스\">디스크(전통) 데이터베이스 VS 인-메모리 데이터베이스</h2>\n\n<p><img src=\"/assets/disk-dbms-and-in-memory-dbms.png\" width=\"450px\" /></p>\n\n<h3 id=\"디스크-데이터베이스\">디스크 데이터베이스</h3>\n<ul>\n  <li>데이터 스토리지가 디스크이다.</li>\n  <li>디스크에 저장된 데이터를 대상으로 쿼리를 수행한다.</li>\n  <li>디스크에 저장된 블록의 내용을 메인 메모리상으로 버퍼링하여 디스크 입출력(횟수)을 줄임으로써 빠른 데이터 관리 기능 제공을 위해 메인 메모리를 이용한다.</li>\n</ul>\n\n<h3 id=\"인-메모리-데이터베이스-1\">인-메모리 데이터베이스</h3>\n<ul>\n  <li>데이터 스토리지가 메인 메모리(RAM)이다.</li>\n  <li>메모리상에 색인을 넣어 필요한 모든 정보를 메모리상의 색인을 통해 빠르게 검색한다.</li>\n  <li>메인 메모리에서 바로 데이터를 검색하기 때문에 매체 접근 속도가 빠르다.</li>\n  <li>내부 알고리즘들이 단순하여 적은 CPU 인스트럭션으로 수행된다.</li>\n</ul>\n\n<h2 id=\"인-메모리-데이터베이스의-단점\">인-메모리 데이터베이스의 단점</h2>\n<p>단점이라면 램(RAM)의 특성이 <code class=\"highlighter-rouge\">휘발성</code>이라는 것이다.\nDB 서버 전원이 갑자기 꺼져버리면 안에 있는 자료들이 즉시 삭제 되어버린다. 그래서 로그인 세션 같은, 서버가 꺼져서 날아가도 상관 없는 임시 데이터에 주로 쓰인다.\n거기다 속도 때문에 쓰는 것이기에 압축은 쓰지 않으며, 데이터에 비해 RAM 용량이 넉넉치 않을 경우 가상 메모리를 쓰게 되어 역효과가 일어나기도 한다.</p>\n\n<h2 id=\"인-메모리-데이터베이스의-종류\">인-메모리 데이터베이스의 종류</h2>\n<ul>\n  <li>Redis</li>\n  <li>Amazon ElastiCache</li>\n  <li>Memcached</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Hacker Rank] Taum And B&#39;day",
      "category" : "hackerrank",
      "tags"     : "Algorithm, HackerRank, Javascript",
      "url"      : "/hackerrank/2020/09/02/taum-and-bday.html",
      "date"     : "2020-09-02 00:00:00 +0900",
      "content"   : "<h2 id=\"taum-and-bday--easy\"><a href=\"https://www.hackerrank.com/challenges/taum-and-bday/problem\">Taum And B’day</a> | Easy</h2>\n\n<p>Taum is planning to celebrate the birthday of his friend, Diksha. There are two types of gifts that Diksha wants from Taum: one is black and the other is white.\nTo make her happy, Taum has to buy b black gifts and w white gifts.</p>\n\n<ul>\n  <li>The cost of each black gift is bc units.</li>\n  <li>The cost of every white gift is wc units.</li>\n  <li>The cost of converting each black gift into white gift or vice versa is z units.</li>\n</ul>\n\n<p>Help Taum by deducing the minimum amount he needs to spend on Diksha’s gifts.</p>\n\n<p>For example, if Taum wants to buy b = 3 black gifts and w = 5 white gifts at a cost of bc = 3, wc = 4 and conversion cost z = 1, we see that he can buy a black gift for 3 and convert it to a white gift for 1, making the total cost of each white gift 4.</p>\n\n<p>That matches the cost of a white gift, so he can do that or just buy black gifts and white gifts. Either way, the overall cost is</p>\n\n<p>3 * 3 + 5 * 4 = 29.</p>\n\n<h4 id=\"function-description\">Function Description</h4>\n\n<p>Complete the function taumBday in the editor below. It should return the minimal cost of obtaining the desired gifts.</p>\n\n<p>taumBday has the following parameter(s):</p>\n\n<ul>\n  <li>b: the number of black gifts</li>\n  <li>w: the number of white gifts</li>\n  <li>bc: the cost of a black gift</li>\n  <li>wc: the cost of a white gift</li>\n  <li>z: the cost to convert one color gift to the other color</li>\n</ul>\n\n<h4 id=\"input-format\">Input Format</h4>\n\n<p>The first line will contain an integer t, the number of test cases.</p>\n\n<p>The next t pairs of lines are as follows:</p>\n<ul>\n  <li>The first line contains the values of integers b and w.</li>\n  <li>The next line contains the values of integers bc, wc, and z.</li>\n</ul>\n\n<h4 id=\"output-format\">Output Format</h4>\n\n<p>t lines, each containing an integer: the minimum amount of units Taum needs to spend on gifts.</p>\n\n<h4 id=\"sample-input\">Sample Input</h4>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>5\n10 10\n1 1 1\n5 9\n2 3 4\n3 6\n9 1 1\n7 7\n4 2 1\n3 3\n1 9 2\n</code></pre></div></div>\n\n<h4 id=\"sample-output\">Sample Output</h4>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>20\n37\n12\n35\n12\n</code></pre></div></div>\n\n<h3 id=\"my-solution-javascript\">My Solution (Javascript)</h3>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">function</span> <span class=\"nx\">taumBday</span><span class=\"p\">(</span><span class=\"nx\">b</span><span class=\"p\">,</span> <span class=\"nx\">w</span><span class=\"p\">,</span> <span class=\"nx\">bc</span><span class=\"p\">,</span> <span class=\"nx\">wc</span><span class=\"p\">,</span> <span class=\"nx\">z</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">black</span> <span class=\"o\">=</span> <span class=\"nx\">BigInt</span><span class=\"p\">(</span><span class=\"nx\">b</span><span class=\"p\">)</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">white</span> <span class=\"o\">=</span> <span class=\"nx\">BigInt</span><span class=\"p\">(</span><span class=\"nx\">w</span><span class=\"p\">)</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">blackCost</span> <span class=\"o\">=</span> <span class=\"nx\">BigInt</span><span class=\"p\">((</span><span class=\"nx\">bc</span> <span class=\"o\">&gt;</span> <span class=\"nx\">wc</span> <span class=\"o\">+</span> <span class=\"nx\">z</span><span class=\"p\">)</span> <span class=\"p\">?</span> <span class=\"nx\">wc</span> <span class=\"o\">+</span> <span class=\"nx\">z</span> <span class=\"p\">:</span> <span class=\"nx\">bc</span><span class=\"p\">)</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">whiteCost</span> <span class=\"o\">=</span> <span class=\"nx\">BigInt</span><span class=\"p\">((</span><span class=\"nx\">wc</span> <span class=\"o\">&gt;</span> <span class=\"nx\">bc</span> <span class=\"o\">+</span> <span class=\"nx\">z</span><span class=\"p\">)</span> <span class=\"p\">?</span> <span class=\"nx\">bc</span> <span class=\"o\">+</span> <span class=\"nx\">z</span> <span class=\"p\">:</span> <span class=\"nx\">wc</span><span class=\"p\">)</span>\n  <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"nx\">blackCost</span> <span class=\"o\">*</span> <span class=\"nx\">black</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"nx\">whiteCost</span> <span class=\"o\">*</span> <span class=\"nx\">white</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">l1</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n  <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">],</span>\n  <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">37</span><span class=\"p\">],</span>\n  <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">],</span>\n  <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">35</span><span class=\"p\">],</span>\n  <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">]</span>\n<span class=\"p\">]</span>\n<span class=\"nx\">l1</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(([</span><span class=\"nx\">b</span><span class=\"p\">,</span> <span class=\"nx\">w</span><span class=\"p\">,</span> <span class=\"nx\">bc</span><span class=\"p\">,</span> <span class=\"nx\">wc</span><span class=\"p\">,</span> <span class=\"nx\">z</span><span class=\"p\">,</span> <span class=\"nx\">er</span><span class=\"p\">])</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">r1</span> <span class=\"o\">=</span> <span class=\"nx\">taumBday</span><span class=\"p\">(</span><span class=\"nx\">b</span><span class=\"p\">,</span> <span class=\"nx\">w</span><span class=\"p\">,</span> <span class=\"nx\">bc</span><span class=\"p\">,</span> <span class=\"nx\">wc</span><span class=\"p\">,</span> <span class=\"nx\">z</span><span class=\"p\">)</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`실행 결과: </span><span class=\"p\">${</span><span class=\"nx\">r1</span><span class=\"p\">}</span><span class=\"s2\">, 기대값: </span><span class=\"p\">${</span><span class=\"nx\">er</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">)</span>\n<span class=\"p\">})</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Hacker Rank] Kangaroo",
      "category" : "hackerrank",
      "tags"     : "Algorithm, HackerRank, Javascript",
      "url"      : "/hackerrank/2020/08/30/kangaroo.html",
      "date"     : "2020-08-30 00:00:00 +0900",
      "content"   : "<h2 id=\"kangaroo--easy\"><a href=\"https://www.hackerrank.com/challenges/kangaroo/problem\">Kangaroo</a> | Easy</h2>\n\n<p>You are choreographing a circus show with various animals.\nFor one act, you are given two kangaroos on a number line ready to jump in the positive direction (i.e, toward positive infinity).</p>\n\n<ul>\n  <li>The first kangaroo starts at location x1 and moves at a rate of v1 meters per jump.</li>\n  <li>The second kangaroo starts at location x2 and moves at a rate of v2 meters per jump.</li>\n</ul>\n\n<p>You have to figure out a way to get both kangaroos at the same location at the same time as part of the show.\nIf it is possible, return YES, otherwise return NO.</p>\n\n<p>For example, kangaroo 1 starts at x1 = 2 with a jump distance v1 = 1 and kangaroo 2 starts at x2 = 1 with a jump distance of v2 = 2.\nAfter one jump, they are both at x = 3, (x1 + v1 = 2 + 1, x2 + v2 = 1 + 2), so our answer is YES.</p>\n\n<h4 id=\"function-description\">Function Description</h4>\n\n<p>Complete the function kangaroo in the editor below.\nIt should return YES if they reach the same position at the same time, or NO if they don’t.</p>\n\n<p>kangaroo has the following parameter(s):</p>\n\n<ul>\n  <li>x1, v1: integers, starting position and jump distance for kangaroo 1</li>\n  <li>x2, v2: integers, starting position and jump distance for kangaroo 2</li>\n</ul>\n\n<h4 id=\"output-format\">Output Format</h4>\n\n<p>Print YES if they can land on the same location at the same time; otherwise, print NO.</p>\n\n<p><strong>Note:</strong> The two kangaroos must land at the same location after making the same number of jumps.</p>\n\n<h4 id=\"sample-input\">Sample Input</h4>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>0 3 4 2\n</code></pre></div></div>\n\n<h4 id=\"sample-output\">Sample Output</h4>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>YES\n</code></pre></div></div>\n\n<h4 id=\"explanation\">Explanation</h4>\n\n<p>The two kangaroos jump through the following sequence of locations:</p>\n\n<p><img src=\"/assets/kangaroo.png\" alt=\"\" /></p>\n\n<p>From the image, it is clear that the kangaroos meet at the same location (number 12 on the number line) after same number of jumps (4 jumps), and we print YES.</p>\n\n<h3 id=\"my-solution-javascript\">My Solution (Javascript)</h3>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">function</span> <span class=\"nx\">kangaroo</span><span class=\"p\">(</span><span class=\"nx\">x1</span><span class=\"p\">,</span> <span class=\"nx\">v1</span><span class=\"p\">,</span> <span class=\"nx\">x2</span><span class=\"p\">,</span> <span class=\"nx\">v2</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"p\">((</span><span class=\"nx\">v1</span> <span class=\"o\">&lt;=</span> <span class=\"nx\">v2</span><span class=\"p\">)</span> <span class=\"o\">||</span> <span class=\"p\">((</span><span class=\"nx\">x2</span> <span class=\"o\">-</span> <span class=\"nx\">x1</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nx\">v1</span> <span class=\"o\">-</span> <span class=\"nx\">v2</span><span class=\"p\">)))</span> <span class=\"p\">?</span> <span class=\"s1\">'NO'</span> <span class=\"p\">:</span> <span class=\"s1\">'YES'</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">r1</span> <span class=\"o\">=</span> <span class=\"nx\">kangaroo</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`실행 결과: </span><span class=\"p\">${</span><span class=\"nx\">r1</span><span class=\"p\">}</span><span class=\"s2\">, 기대값: YES`</span><span class=\"p\">)</span>\n<span class=\"kd\">const</span> <span class=\"nx\">r2</span> <span class=\"o\">=</span> <span class=\"nx\">kangaroo</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`실행 결과: </span><span class=\"p\">${</span><span class=\"nx\">r2</span><span class=\"p\">}</span><span class=\"s2\">, 기대값: NO`</span><span class=\"p\">)</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "컴퓨터와 컴퓨팅",
      "category" : "",
      "tags"     : "Computer Science",
      "url"      : "/cs/2019/03/03/hardware.html",
      "date"     : "2019-03-03 00:00:00 +0900",
      "content"   : "<h2 id=\"하드웨어\">하드웨어</h2>\n<p>컴퓨터의 하드웨어는 <code class=\"highlighter-rouge\">중앙 처리 장치(CPU)</code>, <code class=\"highlighter-rouge\">기억 장치</code>, <code class=\"highlighter-rouge\">입출력 장치</code> 크게 3가지로 구성된다.</p>\n\n<h2 id=\"프로그래밍의-목적\">프로그래밍의 목적</h2>\n<ul>\n  <li><code class=\"highlighter-rouge\">CPU</code>를 작동시켜 <code class=\"highlighter-rouge\">메모리</code>에 데이터를 저장하고 연산하는 일</li>\n  <li>따라서 ‘프로그래밍을 잘 한다’, ‘성능을 개선한다’는 ‘간결한 코드 작성’이 아닌 <code class=\"highlighter-rouge\">CPU 와 메모리를 효율적으로 사용</code>하는 것을 의미</li>\n</ul>\n\n<h2 id=\"0과-1\">0과 1</h2>\n<h3 id=\"컴퓨터는-0과-1을-어떻게-구분할까\">컴퓨터는 0과 1을 어떻게 구분할까?</h3>\n<ul>\n  <li>전류는 전기의 흐름을 뜻한다. 전류의 양이 많으면 전기의 압력(전압)은 높고, 전류의 양이 적으면 전압은 낮다.</li>\n  <li>저항을 만나면 전류를 억제시키기 때문에 전기의 양(전류)가 적어지고 전류가 적기 때문에 전압 또한 낮아진다.</li>\n  <li>컴퓨터는 높은 전압(많은 전류)를 <code class=\"highlighter-rouge\">1(TRUE)</code>로 인식하고 낮은 전압(적은 전류)를 <code class=\"highlighter-rouge\">0(FALSE)</code>로 인식한다.</li>\n</ul>\n\n<p><img src=\"/assets/ohm_law.jpeg\" alt=\"\" /></p>\n\n<h3 id=\"어떻게-0과-1을-전환할까\">어떻게 0과 1을 전환할까?</h3>\n<ul>\n  <li>전류가 흐르는 길목에 저항이 있으면 전류는 낮아진다.</li>\n  <li>전류가 많이 흐르고 있을 때 0을 표현하고자 하면 저항을 두고, 다시 1을 표현하고자 할 때 저항을 제거하면 0과 1을 스위칭할 수 있다.</li>\n  <li>이 처럼 전류를 흐르게 하고 억제하는 장치, 즉 스위치 역할을 하는 것이 <code class=\"highlighter-rouge\">트랜지스터</code>이다.</li>\n</ul>\n\n<h2 id=\"중앙-처리-장치cpu\">중앙 처리 장치(CPU)</h2>\n<ul>\n  <li>입력 장치로 부터 받은 명령을 실제로 처리한다.</li>\n  <li>1초 동안 얼마나 많은 연산을 할 수 있는지 속도를 측정하는 단위는 기가헤르츠(GHz)이다.</li>\n</ul>\n\n<h3 id=\"cpu컴퓨터의-기본처리\">CPU(컴퓨터)의 기본처리</h3>\n<ul>\n  <li>메모리의 특정 번지의 값을 레지스터에서 기억하게 한다.</li>\n  <li>특정 레지스터의 값을 메모리의 특정 번지에서 기억하게 한다.</li>\n  <li>레지스터간(A, B)의 연산을 한 후 레지스터(C)에서 기억하게 한다.</li>\n</ul>\n\n<h3 id=\"cpu-내부\">CPU 내부</h3>\n<ul>\n  <li><em>제어 장치:</em> 연산의 종류를 선택, 모든 명령이 이루어진다.</li>\n  <li><em>연산 장치(ALU):</em> 반드시 레지스터에 기억되어 있는 값을 이용</li>\n  <li><em>레지스터:</em> 명령 및 데이터를 일시적으로 기억, 메모리에 저장되어 있는 명령 및 데이터를 레지스터에 복사후 해당 값을 이용해서 해석과 연산을 한다.</li>\n  <li>이들은 각각의 버스로 연결되어 있다.</li>\n</ul>\n\n<h3 id=\"cpu-cycle\">CPU Cycle</h3>\n<h4 id=\"cpu-의-프로그램-실행-플로우\">CPU 의 프로그램 실행 플로우</h4>\n<blockquote>\n  <p><strong>기계여 명령 = 오퍼레이션  코드 + 오퍼랜드(연산의 대상이 되는 데이터)</strong></p>\n</blockquote>\n\n<p><img src=\"/assets/machine_language.png\" alt=\"\" class=\"center-image\" /></p>\n\n<h3 id=\"1-fetch\">#1. Fetch</h3>\n<p>프로그램 카운터가 가리키고 있는 주소를 CPU 내부(명령레지스터)로 가져온다.</p>\n\n<p><img src=\"/assets/fetch.png\" alt=\"\" class=\"center-image\" /></p>\n\n<h3 id=\"2-decode\">#2. Decode</h3>\n<p>명령 레지스터에 저장되어 있는 값을 컨트롤 유닛이 해석</p>\n\n<blockquote>\n  <h4 id=\"용어-짚고-가기\">용어 짚고 가기</h4>\n  <ul>\n    <li><strong>Decode:</strong> 암호를 풀다. = 명령 레지스터에 저장된 명령을 해석하다.</li>\n    <li><strong>Code:</strong> 암호화 하다.</li>\n  </ul>\n</blockquote>\n\n<p>명령에 따라 오퍼랜드가 있기도 없기도 하며, 디코드를 통해 오퍼랜드의 구조를 결정한다.</p>\n\n<p><img src=\"/assets/decode.png\" alt=\"\" class=\"center-image\" /></p>\n\n<h3 id=\"3-operand-fetch\">#3. Operand Fetch</h3>\n<p><strong>오퍼랜드 패치 = 오퍼랜드를 가져오다.</strong> 오퍼랜드가 있는 명령이면, 메모리에서 오퍼랜드를 가져와서 범용\n 레지스터에 저장한다.</p>\n\n<p><img src=\"/assets/operand_fetch.png\" alt=\"\" class=\"center-image\" /></p>\n\n<h3 id=\"4-execute\">#4. Execute</h3>\n<p>Control Unit 이 ALU 에게 실행을 명령, ALU 는 두 개 혹은 한 개의 레지스터를 참조하여 실행한다.\n<img src=\"/assets/execute.png\" alt=\"\" class=\"center-image\" /></p>\n\n<h3 id=\"5-write-back\">#5. Write Back</h3>\n<p>실행 결과를 레지스터 또는 메모리에 저장한다.</p>\n\n<h2 id=\"기억장치메모리\">기억장치(메모리)</h2>\n<p>명령이나 데이터가 저장되는 공간이다.</p>\n\n<h3 id=\"rom--ram\">ROM &amp; RAM</h3>\n\n<h4 id=\"romread-only-memory\">ROM(Read Only Memory)</h4>\n<ul>\n  <li>글자 그대로 읽기 전용 메모리</li>\n  <li>전원을 꺼도 정보가 사라지지 않는다.</li>\n  <li>전원이 켜질 때 처음 실행되는 프로그램을 저장할 때 이용된다.</li>\n</ul>\n\n<h4 id=\"ramrandom-access-memory\">RAM(Random Access Memory)</h4>\n<ul>\n  <li>무작위로 접근할 수 있는 메모리, 읽기쓰기를 할 수 있는 메모리</li>\n  <li>전월을 끄면 정보가 사라진다.</li>\n</ul>\n\n<h3 id=\"메모리-계층\">메모리 계층</h3>\n\n<p><img src=\"/assets/memory_hierarchy.png\" alt=\"\" /></p>\n\n<blockquote>\n  <p>메모리는 데이터를 저장하는 공간일 뿐인데 왜 이렇게 다양한 종류가 있을까?</p>\n  <ul>\n    <li>이유는 바로 <code class=\"highlighter-rouge\">속도</code>와 <code class=\"highlighter-rouge\">비용</code></li>\n    <li>CPU 안에 있는 레지스터는 메모리 중에서 가장 빠르지만 가장 비싸기 때문에 용랑은 제일 작다.</li>\n  </ul>\n</blockquote>\n\n<h3 id=\"지역성과-캐시-히트\">지역성과 캐시 히트</h3>\n<ul>\n  <li>CPU 에 도달하려면 위에 있는 모든 계층을 거쳐야 한다.</li>\n  <li>계층을 모두 거칠 경우 속도가 느려질 것 같지만 <code class=\"highlighter-rouge\">지역성</code>이라는 개념 때문에 실제로 느려지지는 않다.</li>\n</ul>\n\n<h4 id=\"캐시\">캐시</h4>\n<ul>\n  <li>CPU 에서 데이터를 요청하면 메인 메모리에서 해당 데이터만 가져오는 것이 아니라, 인접 데이터도 캐시로 가져온다.</li>\n  <li>CPU 는 다른 데이터를 요청시 메인 메모리에서 가져오지 않고 우선 캐시에 요청후, 캐시에 없으면 그 때 메인 메모리에서 가져온다.</li>\n</ul>\n\n<h4 id=\"지역성locality\">지역성(Locality)</h4>\n<ul>\n  <li>데이터 접근이 같은 메모리 공간이나 인접한 메모리 공간에서 자주 일어난다는 의미</li>\n  <li>실제로 캐시에 필요한 데이터가 존재할 확룰은 90% 이상</li>\n</ul>\n\n<h2 id=\"quiz\">QUIZ</h2>\n<ul>\n  <li>5비트로, 7비트로 나타낼 수 있는 숫자는 몇 가지일까요?</li>\n  <li>자신의 생일을 2진수로 표현해보아요.</li>\n  <li><a href=\"https://statkclee.github.io/unplugged/data-structure.html\">컴퓨터 과학 언 플러그드</a></li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[PostgreSQL] Table Partitioning",
      "category" : "postgresql",
      "tags"     : "Database, RDBMS, PostgreSQL",
      "url"      : "/postgresql/2019/02/10/table-partitioning.html",
      "date"     : "2019-02-10 00:00:00 +0900",
      "content"   : "<blockquote>\n  <p>최근 <code class=\"highlighter-rouge\">포켓몬고</code>라는 게임을 즐기고 있다. 해당 게임의 데이터 구조를 설계하는 상상을 해 보았다. 우선 게임을 이용하는 유저와 포켓몬의 관계를 성립해야 할 것이다. <br />\n한 유저는 무수히 많은 수의 포켓몬을 포획할 수 있다. <code class=\"highlighter-rouge\">무수히 많은</code> 수의 포켓몬을 <code class=\"highlighter-rouge\">pokemon_storage</code>라는 하나의 테이블에 삽입하게 되고, <br />\n추후 1000만 로우가 넘어서면, 데이터베이스의 쿼리 성능은 현저히 떨어지게 될 것이다. <br />\n이럴 경우, 고려해 볼 수 있는 방안으로 <code class=\"highlighter-rouge\">테이블 파티셔닝</code>이라는 개념이 있다.</p>\n</blockquote>\n\n<h2 id=\"테이블-파티셔닝이란\">테이블 파티셔닝이란?</h2>\n<p>위에서도 언급했듯이, 한 테이블에 데이터 양이 많아지면(1000만 로우를 돌파하게 되면), 데이터베이스의 쿼리 성능은 현저히 떨어진다. <br />\n따라서 큰 서비스이고, 방대한 데이터가 쌓일 가능성이 있다면 테이블 파티셔닝을 고려해야 한다. <br />\n테이블 파티셔닝은 논리적으로 하나의 큰 테이블을 더 작은 물리적 조각으로 분할하는 것을 의미한다.\nPostgreSQL 은 테이블 상속을 통한 파티셔닝을 지원한다.</p>\n\n<h2 id=\"테이블-상속\">테이블 상속</h2>\n<p>테이블 상속의 개념은 객체 지향 프로그래밍 언어에서 소개하는 상속의 개념과 흡사하다. <br />\n이미 존재하는 테이블의 속성을 상속 받아서 자식 테이블에서 사용할 수 있다.</p>\n\n<h2 id=\"테이블-파티셔닝-단계\">테이블 파티셔닝 단계</h2>\n<blockquote>\n\n  <ul>\n    <li><code class=\"highlighter-rouge\">Pokemon GO</code>에서 모든 유저는 잡은 포켓몬을 모을 수 있는 저장 공간이 있다.</li>\n    <li>저장 공간에서 공통으로 사용하는 컬럼은 부모 테이블에 정의한다.</li>\n    <li>저장 공간의 자식 테이블은 유저의 ID에 따라서 분리된다.</li>\n  </ul>\n</blockquote>\n\n<h3 id=\"step-1-부모-테이블-생성\">Step 1. 부모 테이블 생성</h3>\n<ul>\n  <li>부모 테이블 자체는 일반적으로 비어있고, 전체 데이터 세트를 표현하기 위해 존재한다.</li>\n  <li>하위 모든 테이블에 적용할 것이 아니라면, 제한 조건을 걸지 말아야 한다.</li>\n  <li>인덱스나 유니크 제한 조건도 걸을 필요 또한 없다.</li>\n</ul>\n\n<div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">CREATE</span> <span class=\"k\">TABLE</span> <span class=\"n\">IF</span> <span class=\"k\">NOT</span> <span class=\"k\">EXISTS</span> <span class=\"n\">pokemon_storage</span> <span class=\"p\">(</span>\n  <span class=\"n\">id</span> <span class=\"n\">SERIAL</span> <span class=\"k\">PRIMARY</span> <span class=\"k\">KEY</span><span class=\"p\">,</span>\n  <span class=\"n\">user_id</span> <span class=\"n\">INTEGER</span> <span class=\"k\">REFERENCES</span> <span class=\"n\">pokemongo_user</span><span class=\"p\">,</span>\n  <span class=\"n\">pokemon_name</span> <span class=\"n\">VARCHAR</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span>\n  <span class=\"n\">cp</span> <span class=\"n\">INTEGER</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span>\n<span class=\"p\">);</span>\n</code></pre></div></div>\n\n<h3 id=\"step-2-자식-테이블-생성\">Step 2. 자식 테이블 생성</h3>\n<p><code class=\"highlighter-rouge\">user_id</code>의 맨 끝자리 <code class=\"highlighter-rouge\">0 - 9</code>에 따라 테이블을 분리한다. 유저 ID에 해당하는 데이터만 입력 받도록 <code class=\"highlighter-rouge\">check</code> 제약 조건을 지정한다. <br />\n상속 받아서 테이블을 정의하기 때문에 컬럼을 별도로 정의하지 않아도 된다.</p>\n\n<div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">CREATE</span> <span class=\"k\">TABLE</span> <span class=\"n\">IF</span> <span class=\"k\">NOT</span> <span class=\"k\">EXISTS</span> <span class=\"n\">pokemon_storage_0</span> <span class=\"p\">(</span>\n  <span class=\"n\">id</span> <span class=\"n\">INTEGER</span> <span class=\"k\">DEFAULT</span> <span class=\"n\">nextval</span><span class=\"p\">(</span><span class=\"s1\">'pokemon_storage_id_seq'</span><span class=\"p\">::</span><span class=\"n\">regclass</span><span class=\"p\">)</span> <span class=\"k\">PRIMARY</span> <span class=\"k\">KEY</span><span class=\"p\">,</span>\n  <span class=\"k\">FOREIGN</span> <span class=\"k\">KEY</span> <span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"p\">)</span> <span class=\"k\">REFERENCES</span> <span class=\"n\">pokemongo_user</span><span class=\"p\">,</span>\n  <span class=\"k\">CHECK</span> <span class=\"p\">(</span><span class=\"n\">user_id</span> <span class=\"o\">%</span> <span class=\"mi\">10</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"p\">)</span> <span class=\"k\">INHERITS</span> <span class=\"p\">(</span><span class=\"n\">pokemon_storage</span><span class=\"p\">);</span>\n\n<span class=\"k\">CREATE</span> <span class=\"k\">TABLE</span> <span class=\"n\">IF</span> <span class=\"k\">NOT</span> <span class=\"k\">EXISTS</span> <span class=\"n\">pokemon_storage_1</span> <span class=\"p\">(</span>\n  <span class=\"n\">id</span> <span class=\"n\">INTEGER</span> <span class=\"k\">DEFAULT</span> <span class=\"n\">nextval</span><span class=\"p\">(</span><span class=\"s1\">'pokemon_storage_id_seq'</span><span class=\"p\">::</span><span class=\"n\">regclass</span><span class=\"p\">)</span> <span class=\"k\">PRIMARY</span> <span class=\"k\">KEY</span><span class=\"p\">,</span>\n  <span class=\"k\">FOREIGN</span> <span class=\"k\">KEY</span> <span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"p\">)</span> <span class=\"k\">REFERENCES</span> <span class=\"n\">pokemongo_user</span><span class=\"p\">,</span>\n  <span class=\"k\">CHECK</span> <span class=\"p\">(</span><span class=\"n\">user_id</span> <span class=\"o\">%</span> <span class=\"mi\">10</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">)</span> <span class=\"k\">INHERITS</span> <span class=\"p\">(</span><span class=\"n\">pokemon_storage</span><span class=\"p\">);</span>\n\n<span class=\"p\">...</span>\n\n<span class=\"k\">CREATE</span> <span class=\"k\">TABLE</span> <span class=\"n\">IF</span> <span class=\"k\">NOT</span> <span class=\"k\">EXISTS</span> <span class=\"n\">pokemon_storage_9</span> <span class=\"p\">(</span>\n  <span class=\"n\">id</span> <span class=\"n\">INTEGER</span> <span class=\"k\">DEFAULT</span> <span class=\"n\">nextval</span><span class=\"p\">(</span><span class=\"s1\">'pokemon_storage_id_seq'</span><span class=\"p\">::</span><span class=\"n\">regclass</span><span class=\"p\">)</span> <span class=\"k\">PRIMARY</span> <span class=\"k\">KEY</span><span class=\"p\">,</span>\n  <span class=\"k\">FOREIGN</span> <span class=\"k\">KEY</span> <span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"p\">)</span> <span class=\"k\">REFERENCES</span> <span class=\"n\">pokemongo_user</span><span class=\"p\">,</span>\n  <span class=\"k\">CHECK</span> <span class=\"p\">(</span><span class=\"n\">user_id</span> <span class=\"o\">%</span> <span class=\"mi\">10</span> <span class=\"o\">=</span> <span class=\"mi\">9</span><span class=\"p\">)</span>\n<span class=\"p\">)</span> <span class=\"k\">INHERITS</span> <span class=\"p\">(</span><span class=\"n\">pokemon_storage</span><span class=\"p\">);</span>\n</code></pre></div></div>\n\n<h4 id=\"부모-테이블-description\">부모 테이블 Description</h4>\n<p><img src=\"http://localhost:4000/assets/parent-table-description.png\" alt=\"\" class=\"left-image\" /></p>\n\n<h3 id=\"step-3-트리거-함수-생성\">Step 3. 트리거 함수 생성</h3>\n<p>테이블에 데이터 삽입시 자동 분할하여 자식 테이블에 입력이 되지 않기 때문에, 동적 분할을 위한 트리거 함수를 만들어야 한다. <br />\n예제는 <code class=\"highlighter-rouge\">RETERNUNG</code>이 없을 경우이다. =&gt; <a href=\"\">RETURNING이 있을 경우</a></p>\n\n<div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">CREATE</span> <span class=\"k\">FUNCTION</span> <span class=\"n\">pokemon_storage_insert_trigger</span><span class=\"p\">()</span> <span class=\"k\">RETURNS</span> <span class=\"k\">TRIGGER</span> <span class=\"k\">LANGUAGE</span> <span class=\"n\">plpgsql</span>\n<span class=\"k\">AS</span> <span class=\"err\">$$</span>\n  <span class=\"k\">BEGIN</span>\n    <span class=\"k\">CASE</span> <span class=\"p\">(</span><span class=\"k\">NEW</span><span class=\"p\">.</span><span class=\"n\">user_id</span> <span class=\"o\">%</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n      <span class=\"k\">WHEN</span> <span class=\"mi\">0</span>\n        <span class=\"k\">THEN</span> <span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"n\">pokemon_storage_0</span> <span class=\"k\">VALUES</span> <span class=\"p\">(</span><span class=\"k\">NEW</span><span class=\"p\">.</span><span class=\"o\">*</span><span class=\"p\">);</span>\n      <span class=\"k\">WHEN</span> <span class=\"mi\">1</span>\n        <span class=\"k\">THEN</span> <span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"n\">pokemon_storage_1</span> <span class=\"k\">VALUES</span> <span class=\"p\">(</span><span class=\"k\">NEW</span><span class=\"p\">.</span><span class=\"o\">*</span><span class=\"p\">);</span>\n\n      <span class=\"p\">...</span>\n\n      <span class=\"k\">WHEN</span> <span class=\"mi\">9</span>\n        <span class=\"k\">THEN</span> <span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"n\">pokemon_storage_9</span> <span class=\"k\">VALUES</span> <span class=\"p\">(</span><span class=\"k\">NEW</span><span class=\"p\">.</span><span class=\"o\">*</span><span class=\"p\">);</span>\n      <span class=\"k\">ELSE</span>\n        <span class=\"n\">RAISE</span> <span class=\"n\">EXCEPTION</span> <span class=\"s1\">'Invalid user_id. ADD new pokemon_storage child table and fix pokemon_storage_insert_trigger function'</span><span class=\"p\">;</span>\n    <span class=\"k\">END</span> <span class=\"k\">CASE</span><span class=\"p\">;</span>\n    <span class=\"k\">RETURN</span> <span class=\"k\">NULL</span><span class=\"p\">;</span>\n  <span class=\"k\">END</span><span class=\"p\">;</span>\n<span class=\"err\">$$</span><span class=\"p\">;</span>\n\n<span class=\"c1\">-- create trigger for pokemon_storage insert function</span>\n<span class=\"k\">CREATE</span> <span class=\"k\">TRIGGER</span> <span class=\"n\">insert_pokemon_storage_trigger</span>\n  <span class=\"k\">BEFORE</span> <span class=\"k\">INSERT</span> <span class=\"k\">ON</span> <span class=\"n\">pokemon_storage</span>\n  <span class=\"k\">FOR</span> <span class=\"k\">EACH</span> <span class=\"k\">ROW</span> <span class=\"k\">EXECUTE</span> <span class=\"k\">PROCEDURE</span> <span class=\"n\">pokemon_storage_insert_trigger</span><span class=\"p\">();</span>\n\n</code></pre></div></div>\n\n<h3 id=\"마치며\">마치며</h3>\n<p>큰 서비스일 경우, 하나의 테이블(유저)에 연관되어 많은 로우가 삽입될 테이블(pokemon_storage)을 파티셔닝하는 방법을 간략히 살펴보았다.</p>\n\n<ul>\n  <li>PostgreSQL 은 <code class=\"highlighter-rouge\">테이블 상속</code>을 통해 테이블 파티셔닝을 지원한다.</li>\n  <li>테이블 파티셔닝 후, Many(pokemon_storage) 테이블에 데이터 삽입시, One(유저) 테이블의 ID만 입력 받도록 <code class=\"highlighter-rouge\">check</code> 제약 조건을 지정한다.</li>\n  <li>자동 분할이 되지 않기 때문에 동적 분할을 위한 트리거 함수를 별도로 생성해야 한다.</li>\n</ul>\n\n<p>PostgreSQL 테이블 파티셔닝의 더욱 자세한 내용을 알고 싶다면 하단의 문서를 참고한다.</p>\n<ul>\n  <li><a href=\"https://www.postgresql.org/docs/10/ddl-partitioning.html\">5.10. Table Partitioning</a></li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level5 124 나라의 숫자",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level5",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/11/23/tryhelloworld-level5-change124.html",
      "date"     : "2017-11-23 00:00:00 +0900",
      "content"   : "<h2 id=\"124-나라의-숫자\">124 나라의 숫자</h2>\n\n<p>1,2,4 세 개의 숫자만 쓰는 124나라가 있습니다. 124나라에서 사용하는 숫자는 다음과 같이 변환됩니다.</p>\n\n<p>10진법의 1 → 1 <br />\n10진법의 2 → 2 <br />\n10진법의 3 → 4 <br />\n10진법의 4 → 11 <br />\n10진법의 5 → 12 <br />\n10진법의 6 → 14 <br />\n10진법의 7 → 21 <br /></p>\n\n<p>10진법의 수 N이 입력될 때, 124나라에서 쓰는 숫자로 변환하여 반환해주는 change124 함수를 완성해 보세요. 예를 들어 N = 10이면 “41”를 반환해주면 됩니다.</p>\n\n<p>리턴 타입은 문자열입니다.</p>\n\n<h3 id=\"내-풀이\">내 풀이</h3>\n\n<p><strong>[파이썬]</strong></p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">my_change124</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"n\">li</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">'4'</span><span class=\"p\">,</span> <span class=\"s\">'1'</span><span class=\"p\">,</span> <span class=\"s\">'2'</span><span class=\"p\">]</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"s\">''</span>\n    <span class=\"k\">while</span> <span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">s</span> <span class=\"o\">+=</span> <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"o\">%</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">n</span><span class=\"o\">%</span><span class=\"mi\">3</span><span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"p\">:</span> <span class=\"n\">n</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n        <span class=\"n\">n</span> <span class=\"o\">//=</span> <span class=\"mi\">3</span>\n    <span class=\"k\">return</span> <span class=\"n\">s</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n<span class=\"c\"># 테스트를 위한 실행 코드</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">my_change124</span><span class=\"p\">(</span><span class=\"mi\">13</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<h3 id=\"느낀점\">느낀점</h3>\n<p>규칙은 진즉 찾았지만 그걸 표현하는 것이 어려웠다(…) <br />\n4, 1, 2 순으로 리스트를 만들고 3으로 나눈 나머지 인덱스를 활용하면 될 것 같다고 생각하여 대수롭지 않게 여겼는데 풀다보니 큰 장애 요소가 존재했었다. <br />\nn이 3의 제곱이면 3의 배수인 조건까지 충족하게 된다. 즉, <code class=\"highlighter-rouge\">n//3=3의 배수</code>, <code class=\"highlighter-rouge\">n%3=0</code>을 반복하게 되어 9면 <code class=\"highlighter-rouge\">9//3=반복 3회</code>, 결과값으로 <code class=\"highlighter-rouge\">144</code>를 출력하는 큰 오답이 발생한다. <br />\n따라서 <code class=\"highlighter-rouge\">3//3=1</code> 이라는 요인을 제거하고 <code class=\"highlighter-rouge\">3의 배수%3=0</code>이라는 점을 고려하여 만약 n이 3의 배수이면 <code class=\"highlighter-rouge\">n=n-1</code> 이라는 조건을 더하여 해결하였다.</p>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level4 공항 건설하기",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level4",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/11/18/tryhelloworld-level4-choosecity.html",
      "date"     : "2017-11-18 00:00:00 +0900",
      "content"   : "<h2 id=\"공항-건설하기\">공항 건설하기</h2>\n<p>1보다 큰 N개의 도시 중 한 곳에 공항을 지을 예정입니다. 사람들의 편의를 위해 공항으로부터 각 사람들까지의 도시간 이동 거리가 최소가 되는 도시에 짓기로 하였습니다. 편의상 도시는 일직선상에 놓여있다고 가정하며 좌표의 범위는 음수가 포함됩니다. 또한 좌표는 정렬되어 있지 않습니다. 직선상의 위치와 그 도시에 사는 사람들의 수가 주어질 때, 공항을 지을 도시의 위치를 반환해주는 함수 chooseCity 함수를 완성하세요. 거리가 같은 도시가 2개 이상일 경우 위치가 더 작은 쪽의 도시를 선택하면 됩니다. 예를 들어 다음과 같은 정보의 도시가 있다고 가정해 봅시다.</p>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">위치</th>\n      <th style=\"text-align: center\">1</th>\n      <th style=\"text-align: center\">2</th>\n      <th style=\"text-align: center\">3</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">인구수</td>\n      <td style=\"text-align: center\">5</td>\n      <td style=\"text-align: center\">2</td>\n      <td style=\"text-align: center\">3</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>이 살 경우, 각각의 도시에 공항을 지었을 때의 사람들의 이동 거리는 <strong>8, 8, 12</strong> 이므로 1번 또는 2번에 지을 수 있지만, <strong>1의 위치가 더 작으므로 1을 반환</strong>해주면 됩니다.</p>\n\n<h3 id=\"내-풀이\">내 풀이</h3>\n\n<p><strong>[파이썬 1]</strong></p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">copy</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">my_choose_city1</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">city</span><span class=\"p\">):</span>\n    <span class=\"n\">tmp</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">city</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">sum_value</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"c\"># s는 자기 자신 self의 의미</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n            <span class=\"n\">sum_value</span> <span class=\"o\">+=</span> <span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">-</span><span class=\"n\">s</span><span class=\"p\">)</span>\n            <span class=\"n\">city</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sum_value</span>\n    <span class=\"k\">return</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">city</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">dis</span><span class=\"p\">:</span> <span class=\"n\">dis</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"c\"># 테스트 코드</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">chooseCity</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]]))</span>\n</code></pre></div></div>\n\n<p><code class=\"highlighter-rouge\">이동 거리 += 인구수 * 절대값(자기 자신의 위치 - 이동할 도시의 위치)</code>이다. 이동 거리를 구하면 인구수가 무의미해지기 때문에 인구수에 해당하는 인덱스에 이동 거리 값으로 치환했다. 각각의 이동 거리를 다 구하고 치환시킨 후, 이동 거리가 작은 값을 기준으로 분류한다. sorted()는 기본적으로 0번 인덱스를 기준으로 정렬하기 때문에 이동 거리가 같은 값일 경우, 위치가 낮은 순으로 정렬할 것이다. 최종적으로 city의 0번 인덱스의 0번 인덱스, 1이 답에 해당한다.</p>\n\n<p>하지만 이 방법은 리스트 항목만큼 시간을 쓰기 때문에 인덱스가 클 경우 시간 오버를 초래한다.</p>\n\n<p><strong>[파이썬 2]</strong></p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">my_choose_city2</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span><span class=\"n\">city</span><span class=\"p\">):</span>\n    <span class=\"n\">city</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">()</span> <span class=\"c\"># sort()는 기본적으로 0번 인덱스를 기준으로 정렬</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">city</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">left</span><span class=\"p\">,</span> <span class=\"n\">right</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">sum</span><span class=\"p\">([</span><span class=\"n\">city</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)])</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"n\">left</span> <span class=\"o\">+=</span> <span class=\"n\">city</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">right</span> <span class=\"o\">-=</span> <span class=\"n\">city</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">right</span> <span class=\"o\">&gt;</span> <span class=\"n\">left</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">city</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">result</span>\n</code></pre></div></div>\n\n<p>이 풀이 방식은 <a href=\"https://pignuante.github.io/2017-06-21/TryHelloWorldLevel4_2/\">Pignuante</a>님이 푼 원리를 참고한 것이다.</p>\n\n<p>먼저 위치를 기준으로 정렬을 한다. 그 이유는 중간 위치가 기준이 되기 때문이다.\n해당 문제는 인구수에 따라서 최적의 이동 거리를 산출하기 때문에 총 인구수를 구한 뒤, 중간 위치를 기준으로 좌측에 총 인구수의 절반이 우측에 그 나머지 절반이 분포하고 있을 것이라 예측하는 방식을 전제로 한다. \n즉, 인구가 평균에 가까울수록, 혹은 클수록 최적의 이동 거리를 만들어낸다.</p>\n\n<p>각 인덱스에 해당하는 인구수만큼 left는 더하고(좌측의 인구수 증가) right(좌측만큼 인구수 탈락)는 뺀다. 만약 우측 인구 점유율이 좌측 점유율보다 크면 최적의 이동 거리는 뒤에 존재할 것이므로 result는 i+1 인덱스가 된다.</p>\n\n<h3 id=\"다른-사람-풀이\">다른 사람 풀이</h3>\n\n<p><strong>[파이썬]</strong></p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">other_choose_city</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span><span class=\"n\">city</span><span class=\"p\">):</span>\n    <span class=\"n\">city</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n    <span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">([</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">city</span><span class=\"p\">])</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">s</span> <span class=\"o\">+=</span> <span class=\"n\">city</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">s</span> <span class=\"o\">&gt;=</span> <span class=\"p\">(</span><span class=\"n\">total</span> <span class=\"o\">//</span> <span class=\"mi\">2</span><span class=\"p\">):</span> \n            <span class=\"k\">break</span>\n    <span class=\"k\">return</span> <span class=\"n\">city</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</code></pre></div></div>\n\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level4 땅따먹기 게임",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level4",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/11/11/tryhelloworld-level4-hopscotch.html",
      "date"     : "2017-11-11 00:00:00 +0900",
      "content"   : "<h2 id=\"땅따먹기-게임\">땅따먹기 게임</h2>\n\n<p>영희는 땅따먹기 게임에 푹 빠졌습니다. 땅따먹기 게임의 땅은 총 N행 4열로 나누어져 있고, 모든 칸에는 점수가 쓰여 있습니다. 땅을 밟으면서 한 행씩 내려올 때, 영희는 각 행의 4칸 중 1칸만 밟으면서 내려올 수 있습니다. 땅따먹기 게임에는 같은 열을 연속해서 밟을 수가 없는 특수 규칙이 있습니다. 즉, 1행에서 (5)를 밟았다면, 2행의 (8)은 밟을 수가 없게 됩니다. 마지막 행까지 모두 내려왔을 때, 점수가 가장 높은 사람이 게임의 승자가 됩니다. 여러분이 hopscotch 함수를 제작하여 영희가 최대 몇 점을 얻을 수 있는지 알려주세요. 예를 들어 <br />\n1 2 3 5 <br />\n5 6 7 8 <br />\n4 3 2 1 <br />\n의 땅이 있다면, 영희는 각 줄에서 (5), (7), (4) 땅을 밟아 16점을 최고점으로 받을 수 있으며, hopscotch 함수에서는 16을 반환해주면 됩니다.</p>\n\n<h3 id=\"내-풀이\">내 풀이</h3>\n\n<p>[파이썬]</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">change_zero</span><span class=\"p\">(</span><span class=\"n\">li</span><span class=\"p\">):</span>\n    <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"n\">li</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">li</span><span class=\"p\">))]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">return</span> <span class=\"n\">li</span>\n    \n<span class=\"k\">def</span> <span class=\"nf\">hopscotch</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"nb\">sum</span><span class=\"p\">([</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])]</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">change_zero</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]))</span> <span class=\"k\">if</span> <span class=\"n\">board</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]))</span> <span class=\"o\">==</span> <span class=\"n\">board</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]))</span> <span class=\"k\">else</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)])</span>\n\n<span class=\"c\"># 테스트를 위한 실행 코드</span>\n<span class=\"n\">board</span> <span class=\"o\">=</span>  <span class=\"p\">[[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]]</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">hopscotch</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<p>[자바]</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"kd\">class</span> <span class=\"nc\">Hopscotch</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">get_max</span><span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"n\">li</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n        <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">li</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++){</span>\n            <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">;</span> <span class=\"n\">j</span><span class=\"o\">&lt;</span><span class=\"n\">li</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">j</span><span class=\"o\">++){</span>\n                <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">li</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">li</span><span class=\"o\">[</span><span class=\"n\">j</span><span class=\"o\">])</span> <span class=\"o\">{</span>\n                    <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">li</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">];</span>\n                    <span class=\"n\">li</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">li</span><span class=\"o\">[</span><span class=\"n\">j</span><span class=\"o\">];</span>\n                    <span class=\"n\">li</span><span class=\"o\">[</span><span class=\"n\">j</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">temp</span><span class=\"o\">;</span>\n                <span class=\"o\">}</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">li</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">];</span>\n    <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">hopscotch</span><span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">[][]</span> <span class=\"n\">board</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">size</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"n\">tmp</span> <span class=\"o\">=</span> <span class=\"n\">board</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">];</span>\n        <span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"n\">bowl</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">];</span>\n        <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">j</span><span class=\"o\">&lt;</span><span class=\"n\">board</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">].</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">j</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n                <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">arraycopy</span><span class=\"o\">(</span><span class=\"n\">tmp</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">)</span><span class=\"n\">Math</span><span class=\"o\">.</span><span class=\"na\">floor</span><span class=\"o\">((</span><span class=\"mi\">3</span><span class=\"o\">-</span><span class=\"n\">j</span><span class=\"o\">)/</span><span class=\"mi\">3</span><span class=\"o\">),</span> <span class=\"n\">bowl</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">);</span>\n                <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">arraycopy</span><span class=\"o\">(</span><span class=\"n\">tmp</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">)</span><span class=\"n\">Math</span><span class=\"o\">.</span><span class=\"na\">floor</span><span class=\"o\">((</span><span class=\"mi\">7</span><span class=\"o\">-</span><span class=\"n\">j</span><span class=\"o\">)/</span><span class=\"mi\">3</span><span class=\"o\">),</span> <span class=\"n\">bowl</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">);</span>\n                <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">arraycopy</span><span class=\"o\">(</span><span class=\"n\">tmp</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">)</span><span class=\"n\">Math</span><span class=\"o\">.</span><span class=\"na\">floor</span><span class=\"o\">((</span><span class=\"mi\">11</span><span class=\"o\">-</span><span class=\"n\">j</span><span class=\"o\">)/</span><span class=\"mi\">3</span><span class=\"o\">),</span> <span class=\"n\">bowl</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">);</span>\n                <span class=\"n\">result</span><span class=\"o\">[</span><span class=\"n\">j</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">board</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">][</span><span class=\"n\">j</span><span class=\"o\">]</span> <span class=\"o\">+</span> <span class=\"n\">get_max</span><span class=\"o\">(</span><span class=\"n\">bowl</span><span class=\"o\">);</span>\n            <span class=\"o\">}</span>\n            <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">arraycopy</span><span class=\"o\">(</span><span class=\"n\">result</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">tmp</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">tmp</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">);;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"nf\">get_max</span><span class=\"o\">(</span><span class=\"n\">result</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">Hopscotch</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Hopscotch</span><span class=\"o\">();</span>\n        <span class=\"kt\">int</span><span class=\"o\">[][]</span> <span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"o\">{{</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">5</span> <span class=\"o\">},</span> <span class=\"o\">{</span> <span class=\"mi\">5</span><span class=\"o\">,</span> <span class=\"mi\">6</span><span class=\"o\">,</span> <span class=\"mi\">7</span><span class=\"o\">,</span> <span class=\"mi\">8</span> <span class=\"o\">},</span> <span class=\"o\">{</span> <span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"o\">}};</span>\n        <span class=\"c1\">// 아래는 테스트로 출력해 보기 위한 코드입니다.</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"na\">hopscotch</span><span class=\"o\">(</span><span class=\"n\">test</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</code></pre></div></div>\n\n<p>위 코드는 다른 사람의 파이썬 풀이 방식을 적용하여 푼 것이다.</p>\n\n<h3 id=\"다른-사람-풀이\">다른 사람 풀이</h3>\n\n<p>[파이썬]</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">hopscotch</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">):</span>\n    <span class=\"n\">accum</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n    \n    <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">board</span><span class=\"p\">:</span>\n        <span class=\"n\">tmp</span> <span class=\"o\">=</span> <span class=\"n\">accum</span><span class=\"p\">[:]</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">)):</span>\n        <span class=\"n\">accum</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">[:</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">:])</span>\n    <span class=\"k\">return</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">accum</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<h3 id=\"느낀점\">느낀점</h3>\n<p>나는 알고리즘을 풀 때 수학적으로 접근하기 보다는 직관적으로 접근하는 경향이 짙다. 다른 사람의 풀이에서 i가 자기의 열일 경우를 제외하고 더하여 최대값을 구하는 식의 사고가 감탄스러웠다. 나도 그러한 사고를 하도록 노력해야겠다.</p>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level4 최고의 집합",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level4",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/11/10/tryhelloworld-level4-bestset.html",
      "date"     : "2017-11-10 00:00:00 +0900",
      "content"   : "<h2 id=\"최고의-집합\">최고의 집합</h2>\n<p>자연수 N개로 이루어진 집합 중에, 각 원소의 합이 S가 되는 수의 집합은 여러 가지가 존재합니다. 최고의 집합은, 위의 조건을 만족하는 집합 중 각 원소의 곱이 최대가 되는 집합을 의미합니다.</p>\n\n<p>집합 원소의 개수 n과 원소들의 합 s가 주어지면, 최고의 집합을 찾아 원소를 오름차순으로 반환해주는 bestSet 함수를 만들어 보세요.</p>\n\n<p>만약 조건을 만족하는 집합이 없을 때는 배열 맨 앞에 –1을 담아 반환하면 됩니다. 예를 들어 n=3, s=13이면 [4,4,5]가 반환됩니다.\n(자바는 집합이 없는 경우 크기가 1인 배열에 -1을 담아 반환해주세요.)</p>\n\n<h3 id=\"내-풀이\">내 풀이</h3>\n\n<p>[파이썬]</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"k\">def</span> <span class=\"nf\">bestSet</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">s</span><span class=\"o\">//</span><span class=\"n\">n</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"n\">s</span><span class=\"o\">%</span><span class=\"n\">n</span><span class=\"p\">)]</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"n\">s</span><span class=\"o\">//</span><span class=\"n\">n</span><span class=\"o\">+</span><span class=\"mi\">1</span> <span class=\"k\">for</span> <span class=\"n\">rem</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">%</span><span class=\"n\">n</span><span class=\"p\">)]</span>\n\n<span class=\"c\"># 테스트를 위한 실행 코드</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">bestSet</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">13</span><span class=\"p\">))</span>\n\n</code></pre></div></div>\n\n<p>[자바1]</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.Arrays</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">BestSet</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"nf\">bestSet</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">n</span><span class=\"o\">];</span>\n        <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">result</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">;</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">n</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"n\">result</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">)</span><span class=\"n\">Math</span><span class=\"o\">.</span><span class=\"na\">floor</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">/</span><span class=\"n\">n</span><span class=\"o\">);</span>\n            <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">&gt;</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"n\">s</span><span class=\"o\">%</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">result</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">)</span><span class=\"n\">Math</span><span class=\"o\">.</span><span class=\"na\">floor</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">/</span><span class=\"n\">n</span><span class=\"o\">)+</span><span class=\"mi\">1</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">BestSet</span> <span class=\"n\">bs</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">BestSet</span><span class=\"o\">();</span>\n        <span class=\"c1\">//아래는 테스트로 출력해 보기 위한 코드입니다.</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"n\">bs</span><span class=\"o\">.</span><span class=\"na\">bestSet</span><span class=\"o\">(</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">14</span><span class=\"o\">)));</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</code></pre></div></div>\n\n<p>[자바2] : System.arraycopy() 사용</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.Arrays</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">BestSet</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"nf\">bestSet</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">;</span>\n        <span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"n\">ele1</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"n\">s</span><span class=\"o\">%</span><span class=\"n\">n</span><span class=\"o\">];</span>\n        <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"n\">s</span><span class=\"o\">%</span><span class=\"n\">n</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++;)</span> <span class=\"o\">{</span>\n            <span class=\"n\">ele1</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">)</span><span class=\"n\">Math</span><span class=\"o\">.</span><span class=\"na\">floor</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">/</span><span class=\"n\">n</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n        <span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"n\">ele2</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">s</span><span class=\"o\">%</span><span class=\"n\">n</span><span class=\"o\">];</span>\n        <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">s</span><span class=\"o\">%</span><span class=\"n\">n</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"n\">ele2</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">ele1</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]+</span><span class=\"mi\">1</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">n</span><span class=\"o\">];</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">arraycopy</span><span class=\"o\">(</span><span class=\"n\">ele1</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">result</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">ele1</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">);</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">arraycopy</span><span class=\"o\">(</span><span class=\"n\">ele2</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">result</span><span class=\"o\">,</span> <span class=\"n\">ele1</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">,</span> <span class=\"n\">ele2</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">);</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span> \n    <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">BestSet</span> <span class=\"n\">bs</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">BestSet</span><span class=\"o\">();</span>\n        <span class=\"c1\">//아래는 테스트로 출력해 보기 위한 코드입니다.</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"n\">bs</span><span class=\"o\">.</span><span class=\"na\">bestSet</span><span class=\"o\">(</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">14</span><span class=\"o\">)));</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</code></pre></div></div>\n\n<h3 id=\"느낀점\">느낀점</h3>\n<p>자바로 처음에 System.arraycopy()를 사용하여 풀었다. 파이썬에서 풀었던 방식을 적용하려 하다보니 배열을 병합할 방식을 찾았고, 그 방식 중 하나가 System.arraycopy()로 복사하는 형식으로 병합된 형태의 배열을 만드는 방법이 있었다.</p>\n\n<blockquote>\n  <p><strong># System.arraycopy()</strong> <br /></p>\n  <ul>\n    <li>Object src: 복사하고자 하는 소스, 즉 원본  <br /></li>\n    <li>int srcPos: 어느 부분부터 읽어올지에 대한 위치  <br /></li>\n    <li>Object dest: 복사하려는 대상  <br /></li>\n    <li>int destPos : 어느 부분부터 사용할지에 대한 위치  <br /></li>\n    <li>int length: 원본에서 얼마큼 읽어올지에 대한 길이 입력  <br /><br />\n[예제] - 복사 범위 외 인덱스는 0으로 채워진다. <br />\nint[] ori = {1, 2, 3, 4, 5}; // 복사할 대상 <br />\nint[] copy = new int[5]; <br />\nSystem.arraycopy(ori, 0, copy, 0, 3); <br />\nSystem.out.print(copy); // [1, 2, 3, 0, 0]</li>\n  </ul>\n</blockquote>\n\n<p>하지만 문제의 규칙을 다시 생각해보니 for문과 if문으로도 간단하게 풀 수 있다는 것을 깨닫게 되어 방법 1로 다시 풀어서 제출했다 ;) 새로운 문법을 알고 적용한다는 것은 어렵지만 재밌는 것 같다.</p>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level4 숫자의 표현",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level4",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/11/09/tryhelloworld-level4-number-expression.html",
      "date"     : "2017-11-09 00:00:00 +0900",
      "content"   : "<h2 id=\"숫자의-표현\">숫자의 표현</h2>\n<p>수학을 공부하던 민지는 재미있는 사실을 발견하였습니다. 그 사실은 바로 연속된 자연수의 합으로 어떤 숫자를 표현하는 방법이 여러 가지라는 것입니다. 예를 들어, 15를 표현하는 방법은 <br />\n(1+2+3+4+5) <br />\n(4+5+6) <br />\n(7+8) <br />\n(15) <br />\n로 총 4가지가 존재합니다. 숫자를 입력받아 연속된 수로 표현하는 방법을 반환하는 number_expression 함수를 만들어 민지를 도와주세요. 예를 들어 15가 입력된다면 4를 반환해 주면 됩니다.</p>\n\n<h3 id=\"내-풀이\">내 풀이</h3>\n\n<p>[파이썬]</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">number_expression</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n    <span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"nb\">sum</span> <span class=\"o\">=</span> <span class=\"n\">i</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"p\">):</span>\n            <span class=\"nb\">sum</span> <span class=\"o\">+=</span> <span class=\"n\">j</span>\n            <span class=\"k\">if</span> <span class=\"nb\">sum</span> <span class=\"o\">==</span> <span class=\"n\">num</span><span class=\"p\">:</span>\n                <span class=\"n\">count</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                <span class=\"k\">break</span>\n            <span class=\"k\">elif</span> <span class=\"nb\">sum</span> <span class=\"o\">&gt;</span> <span class=\"n\">num</span><span class=\"p\">:</span>\n                <span class=\"k\">break</span>\n    <span class=\"k\">return</span> <span class=\"n\">count</span>\n\n<span class=\"c\"># 테스트를 위한 실행 코드</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">number_expression</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">));</span>\n</code></pre></div></div>\n\n<p>[자바]</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Expressions</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">expressions</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">num</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">;</span>\n        <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">num</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"kt\">int</span> <span class=\"n\">sum</span> <span class=\"o\">=</span> <span class=\"n\">i</span><span class=\"o\">;</span>\n            <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">;</span> <span class=\"n\">j</span><span class=\"o\">&lt;</span><span class=\"n\">num</span><span class=\"o\">;</span> <span class=\"n\">j</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n                <span class=\"n\">sum</span> <span class=\"o\">+=</span> <span class=\"n\">j</span><span class=\"o\">;</span>\n                <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">==</span> <span class=\"n\">num</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                    <span class=\"n\">count</span><span class=\"o\">++;</span>\n                    <span class=\"k\">break</span><span class=\"o\">;</span>\n                <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">&gt;</span> <span class=\"n\">num</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                    <span class=\"k\">break</span><span class=\"o\">;</span>\n                <span class=\"o\">}</span>\t\n            <span class=\"o\">}</span>\t\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">count</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">args</span><span class=\"o\">[])</span> <span class=\"o\">{</span>\n        <span class=\"n\">Expressions</span> <span class=\"n\">expressions</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Expressions</span><span class=\"o\">();</span>\n        <span class=\"c1\">// 아래는 테스트로 출력해 보기 위한 코드입니다.</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">expressions</span><span class=\"o\">.</span><span class=\"na\">expressions</span><span class=\"o\">(</span><span class=\"mi\">5</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level3 멀리 뛰기",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level3",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/11/09/tryhelloworld-level3-jumpcase.html",
      "date"     : "2017-11-09 00:00:00 +0900",
      "content"   : "<h2 id=\"멀리-뛰기\">멀리 뛰기</h2>\n<p>효진이는 멀리 뛰기를 연습하고 있습니다. 효진이는 한번에 1칸, 또는 2칸을 뛸 수 있습니다. 칸이 총 4개 있을 때, 효진이는 <br />\n(1칸, 1칸, 1칸, 1칸) <br />\n(1칸, 2칸, 1칸) <br />\n(1칸, 1칸, 2칸) <br />\n(2칸, 1칸, 1칸) <br />\n(2칸, 2칸) <br />\n의 5가지 방법으로 맨 끝 칸에 도달할 수 있습니다. 멀리뛰기에 사용될 칸의 수 n이 주어질 때, 효진이가 끝에 도달하는 방법이 몇 가지인지 출력하는 jumpCase 함수를 완성하세요. 예를 들어 4가 입력된다면, 5를 반환해 주면 됩니다.</p>\n\n<h3 id=\"내-풀이\">내 풀이</h3>\n\n<p>[파이썬]</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">jumpCase</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n    <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n    <span class=\"k\">while</span> <span class=\"n\">num</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n        <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span>\n        <span class=\"n\">num</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">return</span> <span class=\"n\">b</span>\n\n<span class=\"c\"># 테스트를 위한 실행 코드</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">jumpCase</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<p>[자바]</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">class</span> <span class=\"nc\">JumpCase</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">jumpCase</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">num</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n        <span class=\"k\">while</span><span class=\"o\">(</span><span class=\"n\">num</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">;</span>\n            <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"o\">;</span>\n            <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">temp</span> <span class=\"o\">+</span> <span class=\"n\">a</span><span class=\"o\">;</span>\n            <span class=\"n\">num</span><span class=\"o\">--;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">b</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n      \n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">JumpCase</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">JumpCase</span><span class=\"o\">();</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">j</span><span class=\"o\">.</span><span class=\"na\">jumpCase</span><span class=\"o\">(</span><span class=\"mi\">4</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level3 N개의 최소공배수",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level3",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/11/08/tryhelloworld-level3-nlcm.html",
      "date"     : "2017-11-08 00:00:00 +0900",
      "content"   : "<h2 id=\"n개의-최소공배수\">N개의 최소공배수</h2>\n<p>두 수의 최소공배수(Least Common Multiple)란 입력된 두 수의 배수 중 공통이 되는 가장 작은 숫자를 의미합니다. 예를 들어 2와 7의 최소공배수는 14가 됩니다. 정의를 확장해서, n개의 수의 최소공배수는 n 개의 수들의 배수 중 공통이 되는 가장 작은 숫자가 됩니다. nlcm 함수를 통해 n개의 숫자가 입력되었을 때, 최소공배수를 반환해 주세요. 예를들어 [2,6,8,14] 가 입력된다면 168을 반환해 주면 됩니다.</p>\n\n<h3 id=\"내-풀이\">내 풀이</h3>\n\n<p>[파이썬]</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"nb\">reduce</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">my_nlcm</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"nb\">reduce</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">*</span><span class=\"n\">y</span><span class=\"p\">)</span><span class=\"o\">//</span><span class=\"n\">get_gcd</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">),</span> <span class=\"n\">num</span><span class=\"p\">)</span>\n\n<span class=\"c\"># 최대공약수 구하기: 유클리드 호제법 적용</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_gcd</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">):</span>\n    <span class=\"k\">while</span> <span class=\"n\">y</span><span class=\"p\">:</span>\n        <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">%</span><span class=\"n\">y</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span>\n\n<span class=\"c\"># 테스트를 위한 실행 코드</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">my_nlcm</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">]))</span>\n\n</code></pre></div></div>\n\n<p>[자바 1] : 주어진 함수에 변형을 가하지 않기 위해 for문 사용</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.Arrays</span><span class=\"o\">;</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">NLCM</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">long</span> <span class=\"nf\">nlcm</span><span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"n\">num</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// int[] -&gt; long[] 형변환 람다식</span>\n        <span class=\"kt\">long</span><span class=\"o\">[]</span> <span class=\"n\">longNum</span> <span class=\"o\">=</span> <span class=\"n\">Arrays</span><span class=\"o\">.</span><span class=\"na\">stream</span><span class=\"o\">(</span><span class=\"n\">num</span><span class=\"o\">).</span><span class=\"na\">mapToLong</span><span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">-&gt;</span> <span class=\"n\">i</span><span class=\"o\">).</span><span class=\"na\">toArray</span><span class=\"o\">();</span>\n        <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">longNum</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++){</span>\n            <span class=\"n\">longNum</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"kt\">long</span><span class=\"o\">)</span><span class=\"n\">Math</span><span class=\"o\">.</span><span class=\"na\">floor</span><span class=\"o\">((</span><span class=\"n\">longNum</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]*</span><span class=\"n\">longNum</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">]/</span><span class=\"n\">get_gcd</span><span class=\"o\">(</span><span class=\"n\">longNum</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">],</span> <span class=\"n\">longNum</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">])));</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">longNum</span><span class=\"o\">[</span><span class=\"n\">longNum</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">];</span>\n    <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">long</span> <span class=\"nf\">get_gcd</span><span class=\"o\">(</span><span class=\"kt\">long</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"kt\">long</span> <span class=\"n\">y</span><span class=\"o\">){</span>\n        <span class=\"kt\">long</span> <span class=\"n\">temp</span><span class=\"o\">;</span>\n        <span class=\"k\">while</span><span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">){</span>\n            <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">%</span><span class=\"n\">y</span><span class=\"o\">;</span>\n            <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">y</span><span class=\"o\">;</span>\n            <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">temp</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">x</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">NLCM</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">NLCM</span><span class=\"o\">();</span>\n        <span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"n\">ex</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"mi\">14</span><span class=\"o\">};</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"na\">nlcm</span><span class=\"o\">(</span><span class=\"n\">ex</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</code></pre></div></div>\n\n<p>[자바 2] : 자바 람다식 reduce() 활용</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.Arrays</span><span class=\"o\">;</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">NLCM</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">long</span> <span class=\"nf\">nlcm</span><span class=\"o\">(</span><span class=\"kt\">long</span><span class=\"o\">[]</span> <span class=\"n\">num</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">Arrays</span><span class=\"o\">.</span><span class=\"na\">stream</span><span class=\"o\">(</span><span class=\"n\">num</span><span class=\"o\">).</span><span class=\"na\">reduce</span><span class=\"o\">((</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">-&gt;</span> <span class=\"o\">(</span><span class=\"kt\">long</span><span class=\"o\">)</span><span class=\"n\">Math</span><span class=\"o\">.</span><span class=\"na\">floor</span><span class=\"o\">((</span><span class=\"n\">x</span><span class=\"o\">*</span><span class=\"n\">y</span><span class=\"o\">)/</span><span class=\"n\">get_gcd</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">y</span><span class=\"o\">))).</span><span class=\"na\">getAsLong</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">long</span> <span class=\"nf\">get_gcd</span><span class=\"o\">(</span><span class=\"kt\">long</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"kt\">long</span> <span class=\"n\">y</span><span class=\"o\">){</span>\n        <span class=\"kt\">long</span> <span class=\"n\">temp</span><span class=\"o\">;</span>\n        <span class=\"k\">do</span> <span class=\"o\">{</span>\n            <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">%</span><span class=\"n\">y</span><span class=\"o\">;</span>\n            <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">y</span><span class=\"o\">;</span>\n            <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">temp</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span> <span class=\"k\">while</span><span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">);</span>\n        <span class=\"k\">return</span> <span class=\"n\">x</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">NLCM</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">NLCM</span><span class=\"o\">();</span>\n        <span class=\"kt\">long</span><span class=\"o\">[]</span> <span class=\"n\">ex</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"mi\">14</span><span class=\"o\">};</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"na\">nlcm</span><span class=\"o\">(</span><span class=\"n\">ex</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</code></pre></div></div>\n\n<h3 id=\"소감\">소감</h3>\n<p><strong>이슈 1)</strong> 이번에 자바 코드가 두 개인 것은 자바 람다식인 reduce()를 사용하면 정말 간단하게 풀리는 것을 확인할 수 있다. 하지만 문제에서 주어진 함수의 원형은 int[] 타입이다. 답은 맞지만 원형에 변형을 가해서 테스트에서 계속 오류가 발생, 그래서 int[] 인자를 우선 받은 뒤, long[] 타입으로 바꾸고 for문을 사용하여 답을 제출했다.</p>\n\n<p><strong>이슈 2)</strong> 자바는 파이썬과 다르게 여러 타입이 존재하고 반드시 그 타입을 선언해줘야 한다. 이 문제에서 긴 배열이 주어질 경우, 당연히 최소공배수의 값은 커질 수 밖에 없었다. 즉, int 로는 답을 표현하기에 한계가 있었던 것, 찾아본 결과 자바에서 int 타입의 저장 공간은 32bits, 값 범위가 -2147483648 ~ 2147483647 이다. 답을 도출하는 과정에서 그 최대값인 2147483647가 넘는 경우가 발생하면 음수로 표현되어 계속 이상한 값을 반환하였다. 그래서 전부 long 타입으로 변환했다.</p>\n\n<p>자바로 알고리즘을 풀면서 웹개발을 공부했을 때는 미처 몰랐던 부분이 굉장히 많았다. 굳이 안 해도 간단한 기능 구현에는 문제가 없었기 때문이었다. 요즘 진짜 많이 배운다. 컴파일러 언어를 배워야한다고 양태환 강사님이 누차 말씀하셨는데 맞는 말씀인 것 같다.</p>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level3 시저 암호",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level3",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/11/03/tryhelloword-caesar.html",
      "date"     : "2017-11-03 00:00:00 +0900",
      "content"   : "<p>어떤 문장의 각 알파벳을 일정한 거리만큼 밀어서 다른 알파벳으로 바꾸는 암호화 방식을 시저 암호라고 합니다.</p>\n\n<p>A를 3만큼 밀면 D가 되고 z를 1만큼 밀면 a가 됩니다. 공백은 수정하지 않습니다.</p>\n\n<p>보낼 문자열 s와 얼마나 밀지 알려주는 n을 입력받아 암호문을 만드는 caesar 함수를 완성해 보세요.</p>\n\n<ul>\n  <li>“a B z”,4를 입력받았다면 “e F d”를 리턴합니다.</li>\n</ul>\n\n<h3 id=\"내-코드\">내 코드</h3>\n\n<p>[파이썬]</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">string</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">caesar</span><span class=\"p\">(</span><span class=\"n\">st</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">st</span><span class=\"p\">)</span>\n    <span class=\"n\">upper</span> <span class=\"o\">=</span> <span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">ascii_uppercase</span>\n    <span class=\"n\">lower</span> <span class=\"o\">=</span> <span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">ascii_lowercase</span>\n    <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"mi\">25</span><span class=\"p\">:</span>\n        <span class=\"n\">n</span> <span class=\"o\">%=</span> <span class=\"mi\">26</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)):</span>\n        <span class=\"k\">if</span> <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"n\">upper</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">upper</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"mi\">25</span><span class=\"p\">:</span>\n                <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">upper</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"p\">(</span><span class=\"mi\">26</span><span class=\"o\">-</span><span class=\"n\">upper</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]))]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">upper</span><span class=\"p\">[</span><span class=\"n\">upper</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"n\">n</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"n\">lower</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">lower</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"mi\">25</span><span class=\"p\">:</span>\n                <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">lower</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"p\">(</span><span class=\"mi\">26</span><span class=\"o\">-</span><span class=\"n\">lower</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]))]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">lower</span><span class=\"p\">[</span><span class=\"n\">lower</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"n\">n</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"s\">\"\"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n\n<span class=\"c\"># 실행을 위한 테스트 코드입니다.</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">caesar</span><span class=\"p\">(</span><span class=\"s\">\"a B z\"</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<p>[자바]</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">java.util.Arrays</span><span class=\"o\">;</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">Caesar</span> <span class=\"o\">{</span>\n    <span class=\"n\">String</span> <span class=\"nf\">caesar</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">str</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"na\">split</span><span class=\"o\">(</span><span class=\"s\">\"\"</span><span class=\"o\">);</span>\n        <span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">upper</span> <span class=\"o\">=</span> <span class=\"s\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"</span><span class=\"o\">.</span><span class=\"na\">split</span><span class=\"o\">(</span><span class=\"s\">\"\"</span><span class=\"o\">);</span>\n        <span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">lower</span> <span class=\"o\">=</span> <span class=\"s\">\"abcdefghijklmnopqrstuvwxyz\"</span><span class=\"o\">.</span><span class=\"na\">split</span><span class=\"o\">(</span><span class=\"s\">\"\"</span><span class=\"o\">);</span>\n        <span class=\"n\">String</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span><span class=\"o\">;</span>\n        <span class=\"n\">n</span> <span class=\"o\">%=</span> <span class=\"mi\">26</span><span class=\"o\">;</span>\n\n        <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">str</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">Arrays</span><span class=\"o\">.</span><span class=\"na\">asList</span><span class=\"o\">(</span><span class=\"n\">upper</span><span class=\"o\">).</span><span class=\"na\">contains</span><span class=\"o\">(</span><span class=\"n\">str</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]))</span> <span class=\"o\">{</span>\n                <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">Arrays</span><span class=\"o\">.</span><span class=\"na\">asList</span><span class=\"o\">(</span><span class=\"n\">upper</span><span class=\"o\">).</span><span class=\"na\">indexOf</span><span class=\"o\">(</span><span class=\"n\">str</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">])+</span><span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"mi\">25</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                    <span class=\"n\">str</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">upper</span><span class=\"o\">[</span><span class=\"n\">n</span><span class=\"o\">-(</span><span class=\"mi\">26</span><span class=\"o\">-</span><span class=\"n\">Arrays</span><span class=\"o\">.</span><span class=\"na\">asList</span><span class=\"o\">(</span><span class=\"n\">upper</span><span class=\"o\">).</span><span class=\"na\">indexOf</span><span class=\"o\">(</span><span class=\"n\">str</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]))];</span>\n                <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                    <span class=\"n\">str</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">upper</span><span class=\"o\">[</span><span class=\"n\">Arrays</span><span class=\"o\">.</span><span class=\"na\">asList</span><span class=\"o\">(</span><span class=\"n\">upper</span><span class=\"o\">).</span><span class=\"na\">indexOf</span><span class=\"o\">(</span><span class=\"n\">str</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">])+</span><span class=\"n\">n</span><span class=\"o\">];</span>\n                <span class=\"o\">}</span>\n            <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">Arrays</span><span class=\"o\">.</span><span class=\"na\">asList</span><span class=\"o\">(</span><span class=\"n\">lower</span><span class=\"o\">).</span><span class=\"na\">contains</span><span class=\"o\">(</span><span class=\"n\">str</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]))</span> <span class=\"o\">{</span>\n                <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">Arrays</span><span class=\"o\">.</span><span class=\"na\">asList</span><span class=\"o\">(</span><span class=\"n\">lower</span><span class=\"o\">).</span><span class=\"na\">indexOf</span><span class=\"o\">(</span><span class=\"n\">str</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">])+</span><span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"mi\">25</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                    <span class=\"n\">str</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">lower</span><span class=\"o\">[</span><span class=\"n\">n</span><span class=\"o\">-(</span><span class=\"mi\">26</span><span class=\"o\">-</span><span class=\"n\">Arrays</span><span class=\"o\">.</span><span class=\"na\">asList</span><span class=\"o\">(</span><span class=\"n\">lower</span><span class=\"o\">).</span><span class=\"na\">indexOf</span><span class=\"o\">(</span><span class=\"n\">str</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]))];</span>\n                <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                    <span class=\"n\">str</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">lower</span><span class=\"o\">[</span><span class=\"n\">Arrays</span><span class=\"o\">.</span><span class=\"na\">asList</span><span class=\"o\">(</span><span class=\"n\">lower</span><span class=\"o\">).</span><span class=\"na\">indexOf</span><span class=\"o\">(</span><span class=\"n\">str</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">])+</span><span class=\"n\">n</span><span class=\"o\">];</span>\n                <span class=\"o\">}</span>\n            <span class=\"o\">}</span>\n            <span class=\"n\">result</span> <span class=\"o\">+=</span> <span class=\"n\">str</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">];</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">Caesar</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Caesar</span><span class=\"o\">();</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"na\">caesar</span><span class=\"o\">(</span><span class=\"s\">\"a B z\"</span><span class=\"o\">,</span> <span class=\"mi\">31</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<h3 id=\"다른-사람-풀이\">다른 사람 풀이</h3>\n\n<p>[파이썬]</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">caesar</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>\n    <span class=\"k\">for</span> <span class=\"n\">ch</span> <span class=\"ow\">in</span> <span class=\"n\">s</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">ch</span> <span class=\"o\">==</span> <span class=\"s\">' '</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">result</span> <span class=\"o\">+</span> <span class=\"n\">ch</span>\n            <span class=\"k\">continue</span>\n        <span class=\"n\">enc</span> <span class=\"o\">=</span> <span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">n</span>\n        <span class=\"k\">if</span> <span class=\"n\">ch</span><span class=\"o\">.</span><span class=\"n\">isupper</span><span class=\"p\">():</span>\n            <span class=\"n\">enc</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"s\">'A'</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">26</span> <span class=\"o\">+</span> <span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"s\">'A'</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">ch</span><span class=\"o\">.</span><span class=\"n\">islower</span><span class=\"p\">():</span>\n            <span class=\"n\">enc</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"s\">'a'</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">26</span> <span class=\"o\">+</span> <span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"s\">'a'</span><span class=\"p\">)</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">result</span> <span class=\"o\">+</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">enc</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">result</span>\n</code></pre></div></div>\n\n<p>[자바]</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">class</span> <span class=\"nc\">Caesar</span> <span class=\"o\">{</span>\n    <span class=\"n\">String</span> <span class=\"nf\">caesar</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">String</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span><span class=\"o\">;</span>\n    <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">n</span> <span class=\"o\">%</span> <span class=\"mi\">26</span><span class=\"o\">;</span>\n    <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">();</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n      <span class=\"kt\">char</span> <span class=\"n\">ch</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"na\">charAt</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">);</span>\n      <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">Character</span><span class=\"o\">.</span><span class=\"na\">isLowerCase</span><span class=\"o\">(</span><span class=\"n\">ch</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n        <span class=\"n\">ch</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"kt\">char</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">ch</span> <span class=\"o\">-</span> <span class=\"sc\">'a'</span> <span class=\"o\">+</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">%</span> <span class=\"mi\">26</span> <span class=\"o\">+</span> <span class=\"sc\">'a'</span><span class=\"o\">);</span>\n      <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">Character</span><span class=\"o\">.</span><span class=\"na\">isUpperCase</span><span class=\"o\">(</span><span class=\"n\">ch</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n        <span class=\"n\">ch</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"kt\">char</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">ch</span> <span class=\"o\">-</span> <span class=\"sc\">'A'</span> <span class=\"o\">+</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">%</span> <span class=\"mi\">26</span> <span class=\"o\">+</span> <span class=\"sc\">'A'</span><span class=\"o\">);</span>\n      <span class=\"o\">}</span>\n      <span class=\"n\">result</span> <span class=\"o\">+=</span> <span class=\"n\">ch</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">Caesar</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Caesar</span><span class=\"o\">();</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"s는 'a B z', n은 4인 경우: \"</span> <span class=\"o\">+</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"na\">caesar</span><span class=\"o\">(</span><span class=\"s\">\"a B z\"</span><span class=\"o\">,</span> <span class=\"mi\">4</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</code></pre></div></div>\n\n<blockquote>\n  <p><strong>파이썬 내장 함수</strong> <br /><br />\n<code class=\"highlighter-rouge\">ord()</code> <br />\n문자의 아스키 코드 값을 리턴</p>\n\n  <div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&gt;&gt; ord('a)\n97\n&gt;&gt; ord('0')\n48\n</code></pre></div>  </div>\n\n  <p><code class=\"highlighter-rouge\">chr()</code> <br />\n아스키 코드 값을 입력받아 그 코드에 해당하는 문자를 출력</p>\n\n  <div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&gt;&gt; chr(97)\na\n&gt;&gt; chr(48)\n0\n</code></pre></div>  </div>\n</blockquote>\n\n<blockquote>\n  <p><strong>자바 내장 함수</strong> <br /><br />\n<code class=\"highlighter-rouge\">Character.isLowerCase(char ch), Character.isUpperCase(char ch)</code> <br />\n인자 값이 알파벳 소문자 혹은 대문자 여부에 따라서 true/false를 반환</p>\n</blockquote>\n\n<h3 id=\"소감\">소감</h3>\n<p>새로운 문법과 유용한 쓰임새에 대해서 알 수 있었다. 앞으로 문제를 풀 때 많이 참고해야지.</p>\n\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level3 야근 지수",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level3",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/11/02/tryhelloword-noovertime.html",
      "date"     : "2017-11-02 00:00:00 +0900",
      "content"   : "<p>회사원인 수민이는 많은 일이 쌓여 있습니다. 수민이는 야근을 최소화하기 위해 남은 일의 작업량을 숫자로 메기고, 일에 대한 야근 지수를 줄이기로 결정했습니다.</p>\n\n<p>야근 지수는 남은 일의 작업량을 제곱하여 더한 값을 의미합니다. 수민이는 1시간 동안 남은 일 중 하나를 골라 작업량 1만큼 처리할 수 있습니다. 수민이의 퇴근까지 남은 N 시간과 각 일에 대한 작업량이 있을 때, noOvertime 함수를 제작하여 수민이의 야근 지수를 최소화 한 결과를 출력해 주세요.</p>\n\n<p>예를 들어, N=4 일 때, 남은 일의 작업량이 [4, 3, 3] 이라면 야근 지수를 최소화하기 위해 일을 한 결과는 [2, 2, 2]가 되고 야근 지수는 22 + 22 + 22 = 12가 되어 12를 반환해 줍니다.</p>\n\n<h3 id=\"내-코드\">내 코드</h3>\n\n<p>[파이썬]</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">noOvertime</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">works</span><span class=\"p\">):</span>\n    <span class=\"k\">while</span> <span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">getMaxNum</span><span class=\"p\">(</span><span class=\"n\">works</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n        <span class=\"n\">n</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">return</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">*</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">works</span><span class=\"p\">))</span>\n    \n<span class=\"k\">def</span> <span class=\"nf\">getMaxNum</span><span class=\"p\">(</span><span class=\"n\">works</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">works</span><span class=\"p\">)):</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">works</span><span class=\"p\">)):</span>\n            <span class=\"k\">if</span> <span class=\"n\">works</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">works</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]:</span>\n                <span class=\"n\">works</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">works</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">works</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">],</span> <span class=\"n\">works</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">works</span>\n    \n<span class=\"c\"># 실행을 위한 테스트 코드입니다.</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">noOvertime</span><span class=\"p\">(</span><span class=\"mi\">48</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">]))</span>\n</code></pre></div></div>\n\n<p>[자바]</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n</code></pre></div></div>\n\n<h3 id=\"느낀점\">느낀점</h3>\n<p>파이썬에서 제공해주는 <code class=\"highlighter-rouge\">index()</code>라는 편리한 메서드를 알게되었다.</p>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level2 최솟값 만들기",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level2",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/11/01/tryhelloword-getminsum.html",
      "date"     : "2017-11-01 00:00:00 +0900",
      "content"   : "<h2 id=\"최솟값-만들기\">최솟값 만들기</h2>\n\n<p>자연수로 이루어진 길이가 같은 수열 A,B가 있습니다. 최솟값 만들기는 A, B에서 각각 한 개의 숫자를 뽑아 두 수를 곱한 값을 누적하여 더합니다. 이러한 과정을 수열의 길이만큼 반복하여 최종적으로 누적된 값이 최소가 되도록 만드는 것이 목표입니다.</p>\n\n<p>예를 들어 A = [1, 2] , B = [3, 4] 라면 <br />\n<strong>1.</strong> A에서 1, B에서 4를 뽑아 곱하여 더합니다. <br />\n<strong>2.</strong> A에서 2, B에서 3을 뽑아 곱하여 더합니다.</p>\n\n<p>수열의 길이만큼 반복하여 최솟값 10을 얻을 수 있으며, 이 10이 최솟값이 됩니다. <br />\n수열 A,B가 주어질 때, 최솟값을 반환해주는 getMinSum 함수를 완성하세요.</p>\n\n<h3 id=\"내-코드\">내 코드</h3>\n\n<p>[파이썬]</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">getMinSum</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"n\">sort_a</span> <span class=\"o\">=</span> <span class=\"n\">sort_list</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n    <span class=\"n\">sort_b</span> <span class=\"o\">=</span> <span class=\"n\">sort_list</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    \n    <span class=\"k\">for</span> <span class=\"n\">idx</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)):</span>\n        <span class=\"n\">result</span> <span class=\"o\">+=</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"n\">idx</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">result</span>\n    \n<span class=\"k\">def</span> <span class=\"nf\">sort_list</span><span class=\"p\">(</span><span class=\"n\">li</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">idx</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">li</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n            <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">],</span> <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span>\n    <span class=\"k\">if</span> <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n        <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">li</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">getMinSum</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]))</span>\n</code></pre></div></div>\n\n<p>[자바]</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">class</span> <span class=\"nc\">TryHelloWorld</span> <span class=\"o\">{</span>\n    <span class=\"kt\">int</span> <span class=\"n\">idx</span><span class=\"o\">;</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">getMinSum</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"o\">[]</span><span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"o\">[]</span><span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">answer</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n        <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">idx</span><span class=\"o\">&lt;</span><span class=\"n\">A</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">idx</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"n\">answer</span> <span class=\"o\">+=</span> <span class=\"n\">A</span><span class=\"o\">[</span><span class=\"n\">idx</span><span class=\"o\">]*</span><span class=\"n\">B</span><span class=\"o\">[(</span><span class=\"n\">A</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">)-</span><span class=\"n\">idx</span><span class=\"o\">];</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">answer</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"nf\">getSortedArray</span><span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"n\">array</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">temp</span><span class=\"o\">;</span>\n        <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">idx</span><span class=\"o\">&lt;</span><span class=\"n\">array</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"o\">;</span> <span class=\"n\">idx</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">array</span><span class=\"o\">[</span><span class=\"n\">idx</span><span class=\"o\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">array</span><span class=\"o\">[</span><span class=\"n\">idx</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">])</span> <span class=\"o\">{</span>\n                <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"o\">[</span><span class=\"n\">idx</span><span class=\"o\">];</span>\n                <span class=\"n\">array</span><span class=\"o\">[</span><span class=\"n\">idx</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"o\">[</span><span class=\"n\">idx</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">];</span>\n                <span class=\"n\">array</span><span class=\"o\">[</span><span class=\"n\">idx</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">temp</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">array</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">array</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">])</span> <span class=\"o\">{</span>\n            <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">];</span>\n            <span class=\"n\">array</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">];</span>\n            <span class=\"n\">array</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">temp</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">array</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">TryHelloWorld</span> <span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">TryHelloWorld</span><span class=\"o\">();</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span><span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span><span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"mi\">6</span><span class=\"o\">};</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">test</span><span class=\"o\">.</span><span class=\"na\">getMinSum</span><span class=\"o\">(</span><span class=\"n\">A</span><span class=\"o\">,</span><span class=\"n\">B</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level2 콜라츠 추측",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level2",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/11/01/tryhelloword-collatz.html",
      "date"     : "2017-11-01 00:00:00 +0900",
      "content"   : "<h2 id=\"콜라츠-추측\">콜라츠 추측</h2>\n\n<p>1937년 Collatz란 사람에 의해 제기된 이 추측은, 입력된 수가 짝수라면 2로 나누고, 홀수라면 3을 곱하고 1을 더한 다음, 결과로 나온 수에 같은 작업을 1이 될 때까지 반복할 경우 모든 수가 1이 된다는 추측입니다.</p>\n\n<p>예를 들어, 입력된 수가 6이라면 6→3→10→5→16→8→4→2→1 이 되어 총 8번 만에 1이 됩니다. collatz 함수를 만들어 입력된 수가 몇 번 만에 1이 되는지 반환해 주세요. 단, 500번을 반복해도 1이 되지 않는다면 –1을 반환해 주세요.</p>\n\n<h3 id=\"내-코드\">내 코드</h3>\n\n<p>[파이썬]</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">collatz</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n    <span class=\"n\">repeat</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n    <span class=\"k\">while</span> <span class=\"n\">num</span> <span class=\"o\">!=</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">num</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"n\">num</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>        \n        <span class=\"k\">elif</span> <span class=\"n\">repeat</span> <span class=\"o\">&gt;</span> <span class=\"mi\">500</span><span class=\"p\">:</span>\n            <span class=\"n\">repeat</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n            <span class=\"k\">break</span><span class=\"p\">;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"n\">num</span> <span class=\"o\">*</span> <span class=\"mi\">3</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n        <span class=\"n\">repeat</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">return</span> <span class=\"n\">repeat</span>\n</code></pre></div></div>\n\n<p>[자바]</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">class</span> <span class=\"nc\">Collatz</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">collatz</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">num</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">repeat</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n        <span class=\"k\">while</span> <span class=\"o\">(</span><span class=\"n\">num</span> <span class=\"o\">!=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">num</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"n\">num</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">repeat</span> <span class=\"o\">&gt;</span> <span class=\"mi\">500</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">repeat</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">;</span>\n                <span class=\"k\">break</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"n\">num</span> <span class=\"o\">*</span> <span class=\"mi\">3</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n            <span class=\"n\">repeat</span><span class=\"o\">++;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">repeat</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">Collatz</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Collatz</span><span class=\"o\">();</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"na\">collatz</span><span class=\"o\">(</span><span class=\"mi\">6</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<h3 id=\"다른-사람-코드\">다른 사람 코드</h3>\n\n<p>[파이썬]</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">collatz</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">500</span><span class=\"p\">):</span>\n        <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"n\">num</span> <span class=\"o\">/</span> <span class=\"mi\">2</span> <span class=\"k\">if</span> <span class=\"n\">num</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"n\">num</span><span class=\"o\">*</span><span class=\"mi\">3</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n        <span class=\"k\">if</span> <span class=\"n\">num</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n    <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n</code></pre></div></div>\n\n<p>[자바]</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">class</span> <span class=\"nc\">Collatz</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">collatz</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">num</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">answer</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"mi\">500</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"n\">num</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"o\">?</span> <span class=\"n\">num</span> <span class=\"o\">/</span> <span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">num</span> <span class=\"o\">*</span> <span class=\"mi\">3</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">;</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">num</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"k\">return</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">Collatz</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Collatz</span><span class=\"o\">();</span>        \n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"na\">collatz</span><span class=\"o\">(</span><span class=\"mi\">6</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level2 이상한 문자 만들기",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level2",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/09/02/tryhelloworld-level2-5.html",
      "date"     : "2017-09-02 00:00:00 +0900",
      "content"   : "<h2 id=\"이상한-문자-만들기\">이상한 문자 만들기</h2>\n<p>toWeirdCase 함수는 문자열 s를 매개변수로 입력받습니다.</p>\n\n<p>문자열 s에 각 단어의 짝수번째 인덱스 문자는 대문자로, 홀수번째 인덱스 문자는 소문자로 바꾼 문자열을 리턴하도록 함수를 완성하세요.</p>\n\n<p>예를 들어 s가 “try hello world”라면 첫 번째 단어는 “TrY”, 두 번째 단어는 “HeLlO”, 세 번째 단어는 “WoRlD”로 바꿔 “TrY HeLlO WoRlD”를 리턴하면 됩니다.</p>\n\n<p><strong>주의</strong> 문자열 전체의 짝/홀수 인덱스가 아니라, 단어(공백을 기준)별로 짝/홀수 인덱스를 판단합니다.</p>\n\n<ul>\n  <li>내 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">toWeirdCase</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n\t<span class=\"k\">for</span> <span class=\"n\">idx</span><span class=\"p\">,</span> <span class=\"n\">ele</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n\t\t<span class=\"k\">if</span> <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s\">\" \"</span><span class=\"p\">:</span>\n\t\t\t<span class=\"k\">return</span> <span class=\"n\">s</span><span class=\"p\">[:</span><span class=\"n\">idx</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s\">\" \"</span> <span class=\"o\">+</span> <span class=\"n\">toWeirdCase</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">:])</span>\n\t\t<span class=\"k\">elif</span> <span class=\"n\">idx</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n\t\t\t<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"p\">[:</span><span class=\"n\">idx</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n\t\t<span class=\"k\">else</span><span class=\"p\">:</span>\n\t\t\t<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"p\">[:</span><span class=\"n\">idx</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n\t<span class=\"k\">return</span> <span class=\"n\">s</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"결과 : {}\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">toWeirdCase</span><span class=\"p\">(</span><span class=\"s\">\"try hello world\"</span><span class=\"p\">)));</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">toWeirdCase</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s\">\" \"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"s\">\"\"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"o\">%</span><span class=\"mi\">2</span> <span class=\"k\">else</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">)])</span> <span class=\"k\">for</span> <span class=\"n\">w</span> <span class=\"ow\">in</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()])</span>\n</code></pre></div></div>\n\n<h3 id=\"소감\"><em>소감</em></h3>\n<ul>\n  <li>재귀가 편해서 재귀를 활용하려고 한다. 하지만 재귀함수와 컴프리헨션을 같이 사용하고 싶은데 그 방법은 잘 모르겠다. 이에 대해 좀 더 고민해봐야겠다.</li>\n  <li>enumerate() 메서드를 알고 있었지만 잘 사용하지는 못했다. 이번 문제를 풀고 해당 함수가 제법 유용하다는 것을 알게되었다. 자주 사용해야지.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level2 자연수를 뒤집어 리스트로 만들기",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level2",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/09/02/tryhelloworld-level2-4.html",
      "date"     : "2017-09-02 00:00:00 +0900",
      "content"   : "<h2 id=\"자연수를-뒤집어-리스트로-만들기\">자연수를 뒤집어 리스트로 만들기</h2>\n<p>digit_reverse함수는 양의 정수 n을 매개변수로 입력받습니다.</p>\n\n<p>n을 뒤집어 숫자 하나하나를 list로 표현해주세요.</p>\n\n<p>예를 들어 n이 12345이면 [5,4,3,2,1]을 리턴하면 됩니다.</p>\n\n<ul>\n  <li>내 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">digit_reverse</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n\t<span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">n</span> <span class=\"o\">%</span> <span class=\"mi\">10</span><span class=\"o\">**</span><span class=\"n\">i</span> <span class=\"o\">//</span> <span class=\"mi\">10</span><span class=\"o\">**</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">))</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"결과 : {}\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">digit_reverse</span><span class=\"p\">(</span><span class=\"mi\">12345</span><span class=\"p\">)));</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">digit_reverse</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)][::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</code></pre></div></div>\n\n<h3 id=\"소감\"><em>소감</em></h3>\n<ul>\n  <li>컴프리헨션을 리스트로 받고, 또 해당 리스트를 슬라이스로 받을 수 있다는 것을 알게되었다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level5 2 x n 타일링",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level5",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/09/01/tryhelloworld-level5-1.html",
      "date"     : "2017-09-01 00:00:00 +0900",
      "content"   : "<p>1x1 정사각형 2개가 붙어 있는 타일이 있습니다. 이 타일을 이용하여 총 2xN 의 보드판을 채우려고 합니다.</p>\n\n<p>타일은 가로, 세로 두 가지 방향으로 배치할 수 있습니다.</p>\n\n<p>보드판의 길이 N이 주어질 때, 2xN을 타일로 채울 수 있는 경우의 수를 반환하는 tiling 함수를 완성하세요.</p>\n\n<p>예를들어 N이 7일 경우 아래 그림이 타일을 배치할 수 있는 한 경우입니다.</p>\n\n<p><img src=\"http://localhost:4000/assets/tiles.png\" alt=\"tiles\" class=\"image-center\" /></p>\n\n<p>단, 리턴하는 숫자가 매우 커질 수도 있으므로 숫자가 5자리를 넘어간다면 맨 끝자리 5자리만 리턴하세요.</p>\n\n<p>예를 들어 N = 2일 경우 가로로 배치하는 경우와 세로로 배치하는 경우가 있을 수 있으므로 2를 반환해 주면 됩니다.</p>\n\n<p>하지만 만약 답이 123456789라면 56789만 반환해주면 됩니다. 리턴하는 숫자의 앞자리가 0일 경우 0을 제외한 숫자를 리턴하세요.</p>\n\n<p>리턴타입은 정수형이어야 합니다.</p>\n\n<ul>\n  <li>내 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">tiling</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n\t<span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n\n\t<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n\t\t<span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span>\n\n\t<span class=\"n\">answer</span> <span class=\"o\">=</span> <span class=\"n\">b</span> <span class=\"o\">%</span> <span class=\"mi\">100000</span>\n\t<span class=\"k\">return</span> <span class=\"n\">answer</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">tiling</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">math</span> <span class=\"kn\">import</span> <span class=\"n\">factorial</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">comb</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span><span class=\"n\">k</span><span class=\"p\">):</span>\n    <span class=\"n\">f</span><span class=\"o\">=</span><span class=\"n\">factorial</span>\n    <span class=\"k\">return</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"o\">//</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"n\">k</span><span class=\"p\">))</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">tiling</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"n\">s</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">%</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">t</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">((</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">answer</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n    <span class=\"k\">while</span> <span class=\"n\">s</span><span class=\"o\">&lt;=</span><span class=\"n\">n</span><span class=\"p\">:</span>\n        <span class=\"n\">answer</span><span class=\"o\">+=</span><span class=\"n\">comb</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">+</span><span class=\"n\">t</span><span class=\"p\">,</span><span class=\"n\">s</span><span class=\"p\">)</span>\n        <span class=\"n\">s</span><span class=\"o\">+=</span><span class=\"mi\">2</span>\n        <span class=\"n\">t</span><span class=\"o\">-=</span><span class=\"mi\">1</span>\n    <span class=\"k\">return</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">answer</span><span class=\"p\">)[</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">:])</span>\n</code></pre></div></div>\n\n<h3 id=\"소감\"><em>소감</em></h3>\n<ul>\n  <li>그림을 그리면서 규칙을 살펴보니, 피보나치 수열이었다. 그래서 피보나지 수열 푸는 방식으로 풀었다.</li>\n  <li>알고보면 간단한 문제였는데 다른 사람의 경우 함수를 더 정의한다든지, 모듈을 임포트한다든지 여러 방법으로 접근하였다.</li>\n  <li>문과적 기질이 빛을 발휘한 문제였던 것 같다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level2 하샤드수",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level2",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/09/01/tryhelloworld-level2-harshad.html",
      "date"     : "2017-09-01 00:00:00 +0900",
      "content"   : "<h2 id=\"하샤드수\">하샤드수</h2>\n<p>양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다.</p>\n\n<p>예를들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다.</p>\n\n<p>Harshad함수는 양의 정수 n을 매개변수로 입력받습니다. 이 n이 하샤드수인지 아닌지 판단하는 함수를 완성하세요.</p>\n\n<p>예를들어 n이 10, 12, 18이면 True를 리턴 11, 13이면 False를 리턴하면 됩니다.</p>\n\n<h3 id=\"내-풀이\">내 풀이</h3>\n\n<p>[파이썬]</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"nb\">reduce</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">Harshad</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">n</span> <span class=\"o\">%</span> <span class=\"nb\">reduce</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)])</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n\n<span class=\"c\"># 실행을 위한 코드입니다.</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">Harshad</span><span class=\"p\">(</span><span class=\"mi\">18</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<p>[자바]</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">HarshadNumber</span><span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">isHarshad</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">num</span><span class=\"o\">){</span>\n        <span class=\"n\">String</span> <span class=\"n\">str_num</span> <span class=\"o\">=</span> <span class=\"n\">Integer</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"n\">num</span><span class=\"o\">);</span>\n        <span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">num_arr</span> <span class=\"o\">=</span> <span class=\"n\">str_num</span><span class=\"o\">.</span><span class=\"na\">split</span><span class=\"o\">(</span><span class=\"s\">\"\"</span><span class=\"o\">);</span>\n        <span class=\"kt\">int</span> <span class=\"n\">sum_num</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n        <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">num_arr</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++){</span>\n            <span class=\"n\">sum_num</span> <span class=\"o\">+=</span> <span class=\"n\">Integer</span><span class=\"o\">.</span><span class=\"na\">parseInt</span><span class=\"o\">(</span><span class=\"n\">num_arr</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]);</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">num</span> <span class=\"o\">%</span> <span class=\"n\">sum_num</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\t\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span>  <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">){</span>\n        <span class=\"n\">HarshadNumber</span> <span class=\"n\">sn</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">HarshadNumber</span><span class=\"o\">();</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">sn</span><span class=\"o\">.</span><span class=\"na\">isHarshad</span><span class=\"o\">(</span><span class=\"mi\">11</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<h3 id=\"다른-사람-풀이\">다른 사람 풀이</h3>\n\n<p>[파이썬]</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">Harshad</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">n</span> <span class=\"o\">%</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">))</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n</code></pre></div></div>\n\n<p>[자바]</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">HarshadNumber</span><span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">isHarshad</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">num</span><span class=\"o\">){</span>\n        <span class=\"kt\">int</span> <span class=\"n\">sum</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">;</span>\n        <span class=\"kt\">int</span> <span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"n\">num</span><span class=\"o\">;</span>\n        <span class=\"k\">do</span><span class=\"o\">{</span>\n            <span class=\"n\">sum</span><span class=\"o\">+=</span><span class=\"n\">temp</span><span class=\"o\">%</span><span class=\"mi\">10</span><span class=\"o\">;</span>\n            <span class=\"n\">temp</span><span class=\"o\">/=</span><span class=\"mi\">10</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span><span class=\"k\">while</span><span class=\"o\">(</span><span class=\"n\">temp</span><span class=\"o\">%</span><span class=\"mi\">10</span><span class=\"o\">&gt;</span><span class=\"mi\">0</span><span class=\"o\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">num</span><span class=\"o\">%</span><span class=\"n\">sum</span><span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span>  <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">){</span>\n        <span class=\"n\">HarshadNumber</span> <span class=\"n\">sn</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">HarshadNumber</span><span class=\"o\">();</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">sn</span><span class=\"o\">.</span><span class=\"na\">isHarshad</span><span class=\"o\">(</span><span class=\"mi\">110</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<h3 id=\"느낀점\">느낀점</h3>\n\n<blockquote>\n  <p><strong>reduce()</strong> reduce(sum, [1, 2, 3, 4, 5])<br />\n<strong>sum()</strong> sum([1, 2, 3, 4, 5])</p>\n</blockquote>\n\n<p>원소의 합을 구할 때 요즘 좋다고 하는 람다를 써야할지, 내장 함수인 sum() 써야할지 아니면 성능적으로 큰 차이가 없는데 괜한 고민을 하는 건지 의문이 든다.</p>\n\n<p>자바에서 <code class=\"highlighter-rouge\">do while</code>문에 대한 쓰임을 이해할 수 있었다.</p>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level2 JadenCase문자열 만들기",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level2",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/08/31/tryhelloworld-level2-2.html",
      "date"     : "2017-08-31 00:00:00 +0900",
      "content"   : "<h2 id=\"jadencase문자열-만들기\">JadenCase문자열 만들기</h2>\n<p>Jaden_Case함수는 문자열 s을 매개변수로 입력받습니다.</p>\n\n<p>s에 모든 단어의 첫 알파벳이 대문자이고, 그 외의 알파벳은 소문자인 문자열을 리턴하도록 함수를 완성하세요</p>\n\n<p>예를 들어 s가 “3people unFollowed me for the last week”라면 “3people Unfollowed Me For The Last Week”를 리턴하면 됩니다.</p>\n\n<ul>\n  <li>내 풀이 1</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">Jaden_Case</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n\t<span class=\"n\">li</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span>\n\t<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">::]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n\t<span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">li</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">result</span>\n\t<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">li</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s\">\" \"</span><span class=\"p\">,</span> <span class=\"s\">\"\"</span><span class=\"p\">)</span>\n\t<span class=\"k\">return</span> <span class=\"n\">result</span> <span class=\"o\">+</span> <span class=\"s\">\" \"</span> <span class=\"o\">+</span> <span class=\"n\">Jaden_Case</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>     \n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">Jaden_Case</span><span class=\"p\">(</span><span class=\"s\">\"3people unFollowed me for the last week\"</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<ul>\n  <li>내 풀이 2</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">Jaden_Case</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span>\n    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">test</span><span class=\"p\">:</span>\n        <span class=\"n\">answer</span> <span class=\"o\">=</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">answer</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">isdigit</span><span class=\"p\">():</span>\n            <span class=\"n\">answer</span> <span class=\"o\">=</span> <span class=\"n\">answer</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n        <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">answer</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"s\">' '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">Jaden_Case</span><span class=\"p\">(</span><span class=\"s\">\"3people is not sTudent\"</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">Jaden_Case</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"n\">answer</span> <span class=\"o\">=</span><span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">())):</span>\n        <span class=\"n\">answer</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()[</span><span class=\"mi\">1</span><span class=\"p\">:])</span>\n    <span class=\"k\">return</span> <span class=\"s\">\" \"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">answer</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">Jaden_Case</span><span class=\"p\">(</span><span class=\"s\">\"3people unFollowed me for the last week\"</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<h3 id=\"소감\"><em>소감</em></h3>\n<ul>\n  <li>재귀함수에 꽂혀서 재귀를 이용해 풀어보았다. 이게 아닌데? 이게 맞는건가? 고민하면서 풀었는데, <code class=\"highlighter-rouge\">title()</code>이라는 내장 함수로 깔끔하고 신속하게 풀 수 있다는 것을 알고 굉장히 허무했었다.</li>\n  <li>하지만 title()을 쓰면, <code class=\"highlighter-rouge\">3people</code> 이 <code class=\"highlighter-rouge\">3People</code> 이 되기 때문에 문제의 취지와 맞지 않는다. 그렇기 때문에 문제에 맞추어 title()을 사용하여 다시 풀어보았다.</li>\n  <li>문제를 풀게 되면, 자연스럽게 리스트와 for문을 사용하게 되는데 파이써닉한 방법인 컴프리헨션을 잘 활용하도록 습관을 들여야겠다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Programmers Summer Coding] 직사각형 만들기",
      "category" : "Solve Algorithm!",
      "tags"     : "Alogorithm",
      "url"      : "/solve%20algorithm!/2017/07/18/programmers-coding-test2.html",
      "date"     : "2017-07-18 00:00:00 +0900",
      "content"   : "<p>직사각형을 만드는 데 필요한 4개의 점 중 3개의 좌표가 주어질 때, 나머지 한 점의 좌표를 반환하는 solution 함수를 완성해 주세요.</p>\n\n<p>단, 직사각형의 각 변은 x축, 혹은 y축에 평행하며, 반드시 직사각형을 만들 수 있는 경우만 입력으로 주어집니다.</p>\n\n<p><strong>입출력 예</strong></p>\n\n<p>입력 : [[1, 4], [3, 4], [3, 10]]<br />\n출력 : [1, 10]\n<br /><br />\n입력 : [[1, 1], [2, 2], [1, 2]]<br />\n출력 : [2, 1]</p>\n\n<ul>\n  <li>내 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">make_rectangle</span><span class=\"p\">(</span><span class=\"n\">q_list</span><span class=\"o\">=</span><span class=\"p\">[]):</span>\n    <span class=\"n\">bowl</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">q_list</span><span class=\"p\">)):</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">q_list</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n            <span class=\"n\">bowl</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">q_list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">])</span>\n\n    <span class=\"n\">x_value</span> <span class=\"o\">=</span> <span class=\"n\">bowl</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">::</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n    <span class=\"n\">y_value</span> <span class=\"o\">=</span> <span class=\"n\">bowl</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">::</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">x_value</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"n\">x_value</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">])</span> <span class=\"o\">!=</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">result_x</span> <span class=\"o\">=</span> <span class=\"n\">x_value</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">y_value</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"n\">y_value</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">])</span> <span class=\"o\">!=</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">result_y</span> <span class=\"o\">=</span> <span class=\"n\">y_value</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span>\n\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">result_x</span><span class=\"p\">,</span> <span class=\"n\">result_y</span><span class=\"p\">]</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">result</span>\n\n<span class=\"n\">input_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">]</span>\n<span class=\"n\">make_rectangle</span><span class=\"p\">(</span><span class=\"n\">input_list</span><span class=\"p\">)</span>  \n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Programmers Summer Coding] 원형으로 연결되어 있는 n개의 스티커",
      "category" : "Solve Algorithm!",
      "tags"     : "Alogorithm",
      "url"      : "/solve%20algorithm!/2017/07/18/programmers-coding-test1.html",
      "date"     : "2017-07-18 00:00:00 +0900",
      "content"   : "<p>N개의 스티커가 원형으로 연결되어 있다. 다음 그림은 N = 8인 경우의 예시다.</p>\n\n<p><img src=\"http://localhost:4000/assets/circle-sticker.jpg\" alt=\"circle-sticker\" class=\"center-image\" /></p>\n\n<p>원형으로 연결된 스티커에서 몇 장의 스티커를 뜯어내어 뜯어낸 스티커에 적힌 숫자의 합이 최대가 되도록 한다.</p>\n\n<p>단 스티커 한 장을 뜯어내면 양쪽으로 인접해있는 스티커는 찢어져서 사용할 수 없다.</p>\n\n<p><strong>제한 사항</strong></p>\n<ul>\n  <li>sticker는 원형으로 연결된 스티커의 각 칸에 적힌 숫자가 순서대로 들어있는 배열로, 길이(N)는 1 이상 100,000 이하이다.</li>\n  <li>sticker의 각 원소는 스티커의 각 칸에 적힌 숫자이며, 각 칸에 적힌 숫자는 1이상 100이하의 자연수이다.</li>\n  <li>원형의 스티커 모양을 위해 sticker 배열의 첫 번째 원소와 마지막 원소가 서로 연결되어 있다.</li>\n</ul>\n\n<p><strong>입출력 예</strong></p>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: left\">sticker</th>\n      <th style=\"text-align: center\">answer</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: left\">[14, 6, 5, 11, 3, 9, 2, 10]</td>\n      <td style=\"text-align: center\">36</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">[1, 3, 2, 5, 4]</td>\n      <td style=\"text-align: center\">8</td>\n    </tr>\n  </tbody>\n</table>\n\n<ul>\n  <li>6, 11, 9, 10이 적힌 스티커를 떼어 냈을 때 36으로 최대가 됨</li>\n  <li>3, 5가 적힌 스티커를 떼어 냈을 때 8로 최대가 됨</li>\n</ul>\n\n<h3 id=\"내-풀이\">내 풀이</h3>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"nb\">reduce</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">solution</span><span class=\"p\">(</span><span class=\"n\">array_list</span><span class=\"p\">):</span>\n    <span class=\"n\">sum_value</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">even_end</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">array_list</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"mi\">2</span>\n    <span class=\"n\">sum_num</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">sum_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">array_list</span><span class=\"p\">)):</span>\n        <span class=\"k\">if</span> <span class=\"n\">array_list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">array_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n            <span class=\"n\">front_value</span> <span class=\"o\">=</span> <span class=\"n\">array_list</span><span class=\"p\">[:</span><span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n            <span class=\"k\">del</span> <span class=\"n\">array_list</span><span class=\"p\">[:</span><span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n            <span class=\"n\">array_list</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">front_value</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">array_list</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">sum_num</span> <span class=\"o\">=</span> <span class=\"n\">array_list</span><span class=\"p\">[:</span><span class=\"n\">even_end</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n            <span class=\"n\">sum_value</span> <span class=\"o\">=</span> <span class=\"nb\">reduce</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">+</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">sum_num</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">sum_num</span> <span class=\"o\">=</span> <span class=\"n\">array_list</span><span class=\"p\">[::</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n            <span class=\"n\">sum_value</span> <span class=\"o\">=</span> <span class=\"nb\">reduce</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">+</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">sum_num</span><span class=\"p\">)</span>\n        <span class=\"n\">sum_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">sum_value</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sum_list</span><span class=\"p\">)):</span>\n        <span class=\"k\">if</span> <span class=\"n\">result</span> <span class=\"o\">&lt;</span> <span class=\"n\">sum_list</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">sum_list</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span>\n\n    <span class=\"k\">return</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"n\">array_list1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"n\">array_list2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">]</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">solution</span><span class=\"p\">(</span><span class=\"n\">array_list1</span><span class=\"p\">),</span> <span class=\"n\">solution</span><span class=\"p\">(</span><span class=\"n\">array_list2</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<ul>\n  <li>코드가 굉장히 길고 if문과 for문 남용…</li>\n</ul>\n\n<h3 id=\"다른-사람-풀이\">다른 사람 풀이</h3>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">get_max_sum</span><span class=\"p\">(</span><span class=\"n\">num_list</span><span class=\"p\">):</span>    \n    <span class=\"k\">return</span> <span class=\"nb\">max</span><span class=\"p\">([</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">num_list</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">]],</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">num_list</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">::</span><span class=\"mi\">2</span><span class=\"p\">]],</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"nb\">sum</span><span class=\"p\">)</span>\n\n<span class=\"n\">num_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">]</span>\n<span class=\"n\">get_max_sum</span><span class=\"p\">(</span><span class=\"n\">num_list</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<ul>\n  <li>코드가 짧고 보기 좋다. 존경스럽다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level2 2016년",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level2",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/06/19/tryhelloworld-level2-1.html",
      "date"     : "2017-06-19 00:00:00 +0900",
      "content"   : "<h2 id=\"2016년\">2016년</h2>\n\n<p>2016년 1월 1일은 금요일입니다. 2016년 A월 B일은 무슨 요일일까요? 두 수 A,B를 입력받아 A월 B일이 무슨 요일인지 출력하는 getDayName 함수를 완성하세요.</p>\n\n<p>요일의 이름은 일요일부터 토요일까지 각각</p>\n\n<p><code class=\"highlighter-rouge\">SUN,MON,TUE,WED,THU,FRI,SAT</code></p>\n\n<p>를 출력해주면 됩니다. 예를 들어 A=5, B=24가 입력된다면 5월 24일은 화요일이므로 <code class=\"highlighter-rouge\">TUE</code> 를 반환하면 됩니다.</p>\n\n<ul>\n  <li>내 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">getDayName</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"n\">week_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">'MON'</span><span class=\"p\">,</span> <span class=\"s\">'TUE'</span><span class=\"p\">,</span> <span class=\"s\">'WED'</span><span class=\"p\">,</span> <span class=\"s\">'THU'</span><span class=\"p\">,</span> <span class=\"s\">'FRI'</span><span class=\"p\">,</span> <span class=\"s\">'SAT'</span><span class=\"p\">,</span> <span class=\"s\">'SUN'</span><span class=\"p\">]</span>\n    <span class=\"n\">week_int</span> <span class=\"o\">=</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">weekday</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">week_list</span><span class=\"p\">[</span><span class=\"n\">week_int</span><span class=\"p\">]</span>\n\n<span class=\"c\">#아래 코드는 테스트를 위한 출력 코드입니다.</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">getDayName</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">getDayName</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"n\">months</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"mi\">29</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">]</span>\n    <span class=\"n\">days</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">'FRI'</span><span class=\"p\">,</span> <span class=\"s\">'SAT'</span><span class=\"p\">,</span> <span class=\"s\">'SUN'</span><span class=\"p\">,</span> <span class=\"s\">'MON'</span><span class=\"p\">,</span> <span class=\"s\">'TUE'</span><span class=\"p\">,</span> <span class=\"s\">'WED'</span><span class=\"p\">,</span> <span class=\"s\">'THU'</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">days</span><span class=\"p\">[(</span><span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">months</span><span class=\"p\">[:</span><span class=\"n\">a</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"n\">b</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">%</span><span class=\"mi\">7</span><span class=\"p\">]</span>\n</code></pre></div></div>\n\n<h2 id=\"소감\"><em>소감</em></h2>\n<ul>\n  <li>다른 사람의 경우 내장 함수 안 쓰고 푼 좋은 예인 것 같다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 약수의 합",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/06/12/tryhelloworld-level1-7-2.html",
      "date"     : "2017-06-12 00:00:00 +0900",
      "content"   : "<h2 id=\"약수의-합\">약수의 합</h2>\n<p>어떤 수를 입력받아 그 수의 약수를 모두 더한 수 sumDivisor 함수를 완성해 보세요.</p>\n\n<p>예를 들어 12가 입력된다면 12의 약수는 [1, 2, 3, 4, 6, 12]가 되고, 총 합은 28이 되므로 28을 반환해 주면 됩니다.</p>\n\n<ul>\n  <li>내 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"nb\">reduce</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">sumDivisor</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n    <span class=\"n\">divisor</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">num</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">divisor</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"nb\">reduce</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">divisor</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">sumDivisor</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"nb\">sum</span><span class=\"p\">([</span> <span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">num</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">num</span><span class=\"o\">%</span><span class=\"n\">i</span><span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 피보나치 수",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/06/12/tryhelloworld-level1-7-1.html",
      "date"     : "2017-06-12 00:00:00 +0900",
      "content"   : "<h2 id=\"피보나치-수\">피보나치 수</h2>\n<p>피보나치 수는 F(0) = 0, F(1) = 1일 때, 2 이상의 n에 대하여 F(n) = F(n-1) + F(n-2) 가 적용되는 점화식입니다.</p>\n\n<p>2 이상의 n이 입력되었을 때, fibonacci 함수를 제작하여 n번째 피보나치 수를 반환해 주세요.</p>\n\n<p>예를 들어 n = 3이라면 2를 반환해주면 됩니다.</p>\n\n<ul>\n  <li>내 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">fibonacci</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n    <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n    <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">while</span> <span class=\"bp\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"o\">-</span><span class=\"n\">a</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">&gt;</span> <span class=\"n\">num</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span>\n        <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span>\n        <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">fibonacci</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">fibonacci</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n    <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n        <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 행렬의 덧셈",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/06/11/tryhelloworld-level1-6-2.html",
      "date"     : "2017-06-11 00:00:00 +0900",
      "content"   : "<h2 id=\"행렬의-덧셈\">행렬의 덧셈</h2>\n<p>행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다.<br />\n2개의 행렬을 입력받는 sumMatrix 함수를 완성하여 행렬 덧셈의 결과를 반환해 주세요.<br /></p>\n\n<p>예를 들어 2x2 행렬인 A = ((1, 2), (2, 3)), B = ((3, 4), (5, 6)) 가 주어지면, 같은 2x2 행렬인 ((4, 6), (7, 9))를 반환하면 됩니다.(어떠한 행렬에도 대응하는 함수를 완성해주세요.)</p>\n\n<ul>\n  <li>내 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">sumMatrix</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"n\">B</span><span class=\"p\">):</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[[]</span> <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">))]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)):</span>\n    \t<span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])):</span>\n        \t<span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">B</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">])</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">result</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">sumMatrix</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">]],</span> <span class=\"p\">[[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">],[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">],[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">]]))</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">sumMatrix</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"n\">B</span><span class=\"p\">):</span>\n  <span class=\"n\">answer</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">B</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">))]</span>\n\n  <span class=\"k\">return</span> <span class=\"n\">answer</span>\n</code></pre></div></div>\n\n<h3 id=\"느낀점\"><em>느낀점</em></h3>\n<ul>\n  <li>최대공약수, 최소공배수 문제의 경우, 수학적 접근이 미숙해서 결국 검색으로 gcd 모듈이 있다는 것을 알게되어 사용하였다.</li>\n  <li>모듈에 의존하기보다는 코드가 길어지더라도 원리를 알고 직접 풀어보는 시간을 갖는 것이 중요한 것 같다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 최대공약수와 최소공배수",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/06/11/tryhelloworld-level1-6-1.html",
      "date"     : "2017-06-11 00:00:00 +0900",
      "content"   : "<h2 id=\"최대공약수와-최소공배수\">최대공약수와 최소공배수</h2>\n<p>두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환해주는 gcdlcm 함수를 완성해 보세요.</p>\n\n<p>배열의 맨 앞에 최대공약수, 그 다음 최소공배수를 넣어 반환하면 됩니다.</p>\n\n<p>예를 들어 gcdlcm(3,12) 가 입력되면, [3, 12]를 반환해주면 됩니다.</p>\n\n<ul>\n  <li>내 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">fractions</span> <span class=\"kn\">import</span> <span class=\"n\">gcd</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">gcdlcm</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">gcd</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">),</span> <span class=\"n\">a</span><span class=\"o\">*</span><span class=\"n\">b</span><span class=\"o\">/</span><span class=\"n\">gcd</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">)]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">gcdlcm</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">12</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">gcdlcm</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">),</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">while</span> <span class=\"n\">t</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">c</span> <span class=\"o\">%</span> <span class=\"n\">d</span>\n        <span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">t</span>\n    <span class=\"n\">answer</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">*</span><span class=\"n\">b</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"p\">)]</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">answer</span>\n</code></pre></div></div>\n\n<h3 id=\"소감\"><em>소감</em></h3>\n<ul>\n  <li>최대공약수, 최소공배수 문제의 경우, 수학적 접근이 미숙해서 결국 검색으로 찾은 gcd 모듈을 사용하였다.</li>\n  <li>모듈에 의존하기보다는 코드가 길어지더라도 원리를 알고 직접 풀어보는 시간을 갖는 것이 중요한 것 같다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 같은 숫자는 싫어",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/06/07/tryhelloworld-level1-5-2.html",
      "date"     : "2017-06-07 00:00:00 +0900",
      "content"   : "<h2 id=\"같은-숫자는-싫어\">같은 숫자는 싫어</h2>\n<p>no_continuous함수는 스트링 s를 매개변수로 입력받습니다.</p>\n\n<p>s의 글자들의 순서를 유지하면서, 글자들 중 연속적으로 나타나는 아이템은 제거된 배열(파이썬은 list)을 리턴하도록 함수를 완성하세요.\n예를들어 다음과 같이 동작하면 됩니다.<br /></p>\n\n<p>s가 ‘133303’이라면 [‘1’, ‘3’, ‘0’, ‘3’]를 리턴</p>\n\n<p>s가 ‘47330’이라면 [4, 7, 3, 0]을 리턴</p>\n\n<ul>\n  <li>내가 푼 것</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">no_continuous</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"n\">bowl</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span>\n    <span class=\"n\">num_value</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)):</span>\n        <span class=\"k\">if</span> <span class=\"n\">num_value</span> <span class=\"o\">!=</span> <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]:</span>\n            <span class=\"n\">num_value</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n            <span class=\"n\">bowl</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">num_value</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">bowl</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span> <span class=\"n\">no_continuous</span><span class=\"p\">(</span> <span class=\"s\">\"133303\"</span> <span class=\"p\">))</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">no_continuous</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">))</span> <span class=\"k\">if</span> <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">]]</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 딕셔너리 정렬",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/06/07/tryhelloworld-level1-5-1.html",
      "date"     : "2017-06-07 00:00:00 +0900",
      "content"   : "<h2 id=\"딕셔너리-정렬\">딕셔너리 정렬</h2>\n<p>딕셔너리는 들어있는 값에 순서가 없지만, 키를 기준으로 정렬하고 싶습니다. 그래서 키와 값을 튜플로 구성하고, 이를 순서대로 리스트에 넣으려고 합니다.</p>\n\n<p>예를 들어 {“김철수”:78, “이하나”:97, “정진원”:88}이 있다면, 각각의 키와 값을</p>\n\n<ul>\n  <li>(“김철수”, 78)</li>\n  <li>(“이하나”, 97)</li>\n  <li>(“정진원”, 88)</li>\n</ul>\n\n<p>과 같이 튜플로 분리하고 키를 기준으로 정렬해서 다음과 같은 리스트를 만들면 됩니다.</p>\n\n<p>예: [ (“김철수”, 78), (“이하나”, 97), (“정진원”, 88) ]</p>\n\n<p>다음 sort_dictionary 함수를 완성해 보세요.</p>\n\n<ul>\n  <li>내가 푼 것</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">sort_dictionary</span><span class=\"p\">(</span><span class=\"n\">dic</span><span class=\"p\">):</span>\n    <span class=\"n\">re_arrange</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">sort_name</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">dic</span><span class=\"p\">))</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sort_name</span><span class=\"p\">)):</span>\n    \t<span class=\"n\">re_arrange</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">sort_name</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">dic</span><span class=\"p\">[</span><span class=\"n\">sort_name</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]]))</span>\n    <span class=\"k\">return</span> <span class=\"n\">re_arrange</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span> <span class=\"n\">sort_dictionary</span><span class=\"p\">(</span> <span class=\"p\">{</span><span class=\"s\">\"김철수\"</span><span class=\"p\">:</span><span class=\"mi\">78</span><span class=\"p\">,</span> <span class=\"s\">\"이하나\"</span><span class=\"p\">:</span><span class=\"mi\">97</span><span class=\"p\">,</span> <span class=\"s\">\"정진원\"</span><span class=\"p\">:</span><span class=\"mi\">88</span><span class=\"p\">}</span> <span class=\"p\">))</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">sort_dictionary</span><span class=\"p\">(</span><span class=\"n\">dic</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">dic</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">(),</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 문자열 내 p와 y의 개수",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/06/06/tryhelloworld-level1-4-2.html",
      "date"     : "2017-06-06 00:00:00 +0900",
      "content"   : "<h2 id=\"문자열-내-p와-y의-개수\">문자열 내 p와 y의 개수</h2>\n<p>numPY함수는 대문자와 소문자가 섞여있는 문자열 s를 매개변수로 입력받습니다.</p>\n\n<p>s에 ‘p’의 개수와 ‘y’의 개수를 비교해 같으면 True, 다르면 False를 리턴하도록 함수를 완성하세요. ‘p’, ‘y’ 모두 하나도 없는 경우는 항상 True를 리턴합니다.</p>\n\n<p>예를들어 s가 “pPoooyY”면 True를 리턴하고 “Pyy”라면 False를 리턴합니다.</p>\n\n<ul>\n  <li>내가 푼 것</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">numPY</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n\t<span class=\"n\">p_count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\t<span class=\"n\">y_count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n\t<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">s</span><span class=\"p\">:</span>\n\t\t<span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"s\">\"p\"</span> <span class=\"ow\">or</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"s\">\"P\"</span><span class=\"p\">:</span>\n\t\t\t<span class=\"n\">p_count</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\t\t<span class=\"k\">elif</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"s\">\"y\"</span> <span class=\"ow\">or</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"s\">\"Y\"</span><span class=\"p\">:</span>\n\t\t\t<span class=\"n\">y_count</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\t<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">p_count</span><span class=\"p\">,</span> <span class=\"n\">y_count</span><span class=\"p\">)</span>\n\n\t<span class=\"k\">if</span> <span class=\"n\">p_count</span> <span class=\"o\">==</span> <span class=\"n\">y_count</span><span class=\"p\">:</span>\n\t\t<span class=\"k\">return</span> <span class=\"bp\">True</span>\n\t<span class=\"k\">return</span> <span class=\"bp\">False</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span> <span class=\"n\">numPY</span><span class=\"p\">(</span><span class=\"s\">\"YbYYYpppEPRm\"</span><span class=\"p\">)</span> <span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span> <span class=\"n\">numPY</span><span class=\"p\">(</span><span class=\"s\">\"Pyy\"</span><span class=\"p\">)</span> <span class=\"p\">)</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">numPY</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"s\">'p'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"s\">'y'</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<h4 id=\"소감\"><em>소감</em></h4>\n<ul>\n  <li>이번 알고리즘은 내 기준에서 매우 어려웠다. 코드 엄청 긴 것 보소&gt;.0 그에 비해 다른 사람이 한 줄로 풀어낸 것을 보노라면 어김없이 현타가 찾아온다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 문자열 다루기 기본",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/06/06/tryhelloworld-level1-4-1.html",
      "date"     : "2017-06-06 00:00:00 +0900",
      "content"   : "<h2 id=\"문자열-다루기-기본\">문자열 다루기 기본</h2>\n<p>alpha_string46함수는 문자열 s를 매개변수로 입력받습니다.</p>\n\n<p>s의 길이가 4혹은 6이고, 숫자로만 구성되있는지 확인해주는 함수를 완성하세요.</p>\n\n<p>예를들어 s가 “a234”이면 False를 리턴하고 “1234”라면 True를 리턴하면 됩니다.</p>\n\n<ul>\n  <li>내가 푼 것</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">alpha_string46</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"n\">num_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">):</span>\n        <span class=\"n\">num_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span>\n\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">4</span> <span class=\"ow\">and</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">6</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">False</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)):</span>\n        <span class=\"k\">if</span> <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">num_list</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">False</span>\n    <span class=\"k\">return</span> <span class=\"bp\">True</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span> <span class=\"n\">alpha_string46</span><span class=\"p\">(</span><span class=\"s\">\"a23415\"</span><span class=\"p\">)</span> <span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span> <span class=\"n\">alpha_string46</span><span class=\"p\">(</span><span class=\"s\">\"031779\"</span><span class=\"p\">)</span> <span class=\"p\">)</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">alpha_string46</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">isdigit</span><span class=\"p\">()</span> <span class=\"ow\">and</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 삼각형 출력하기",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/06/01/tryhelloworld-level1-3-4.html",
      "date"     : "2017-06-01 00:00:00 +0900",
      "content"   : "<h2 id=\"삼각형-출력하기\">삼각형 출력하기</h2>\n<p>printTriangle 메소드는 양의 정수 num을 매개변수로 입력받습니다.<br />\n다음을 참고해 *(별)로 높이가 num인 삼각형을 문자열로 리턴하는 printTriangle 메소드를 완성하세요.<br />\nprintTriangle이 return하는 String은 개행문자(‘\\n’)로 끝나야 합니다.</p>\n\n<ul>\n  <li>내가 푼 것</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">printTriangle</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n\t<span class=\"n\">star_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\t<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">num</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n            <span class=\"n\">star_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s\">\"*\"</span> <span class=\"o\">*</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span>\n\n\t<span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">star_list</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span> <span class=\"n\">printTriangle</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span> <span class=\"p\">)</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">printTriangle</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"s\">'*'</span><span class=\"o\">*</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">num</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)])</span>\n</code></pre></div></div>\n\n<h4 id=\"소감\"><em>소감</em></h4>\n<ul>\n  <li>내가 푸는 방식은 아무래도 파이써닉함에서 한참 벗어나는 것 같다. 알고리즘을 단계별로 차차 풀어나가고 다른 사람 풀이도 열심히 참고하여 문법을 익히는 게 우선인 듯 하다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 서울에서 김서방 찾기",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/06/01/tryhelloworld-level1-3-3.html",
      "date"     : "2017-06-01 00:00:00 +0900",
      "content"   : "<h2 id=\"서울에서-김서방-찾기\">서울에서 김서방 찾기</h2>\n<p>findKim 함수는 String형 배열 seoul을 매개변수로 받습니다.</p>\n\n<p>seoul의 element중 “Kim”의 위치 x를 찾아, “김서방은 x에 있다”는 String을 반환하세요.</p>\n\n<p>seoul에 “Kim”은 오직 한 번만 나타나며 잘못된 값이 입력되는 경우는 없습니다.</p>\n\n<ul>\n  <li>내가 푼 것</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">findKim</span><span class=\"p\">(</span><span class=\"n\">seoul</span><span class=\"p\">):</span>\n    <span class=\"n\">kimIdx</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">seoul</span><span class=\"p\">)):</span>\n        <span class=\"k\">if</span> <span class=\"n\">seoul</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s\">\"Kim\"</span><span class=\"p\">:</span>\n            <span class=\"n\">kimIdx</span> <span class=\"o\">=</span> <span class=\"n\">i</span>\n\n    <span class=\"k\">return</span> <span class=\"s\">\"김서방은 {}에 있다\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">kimIdx</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">findKim</span><span class=\"p\">([</span><span class=\"s\">\"Queen\"</span><span class=\"p\">,</span> <span class=\"s\">\"Tod\"</span><span class=\"p\">,</span> <span class=\"s\">\"Kim\"</span><span class=\"p\">]))</span>\n\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">findKim</span><span class=\"p\">(</span><span class=\"n\">seoul</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s\">\"김서방은 {}에 있다\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">seoul</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"s\">'Kim'</span><span class=\"p\">))</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 수박수박수박수박수박수?",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/05/30/tryhelloworld-level1-3-2.html",
      "date"     : "2017-05-30 00:00:00 +0900",
      "content"   : "<h2 id=\"수박수박수박수박수박수\">수박수박수박수박수박수?</h2>\n<p>water_melon함수는 정수 n을 매개변수로 입력받습니다.</p>\n\n<p>길이가 n이고, 수박수박수…와 같은 패턴을 유지하는 문자열을 리턴하도록 함수를 완성하세요.</p>\n\n<p>예를들어 n이 4이면 ‘수박수박’을 리턴하고 3이라면 ‘수박수’를 리턴하면 됩니다.</p>\n\n<ul>\n  <li>내가 푼 것</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">water_melon</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"n\">bowl</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">su</span> <span class=\"o\">=</span> <span class=\"s\">\"수\"</span>\n    <span class=\"n\">bak</span> <span class=\"o\">=</span> <span class=\"s\">\"박\"</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">bowl</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bak</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">bowl</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">su</span><span class=\"p\">)</span>\n\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">bowl</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">result</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"n이 3인 경우: \"</span> <span class=\"o\">+</span> <span class=\"n\">water_melon</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">));</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"n이 4인 경우: \"</span> <span class=\"o\">+</span> <span class=\"n\">water_melon</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">));</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">water_melon</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"s\">\"수박\"</span> <span class=\"o\">*</span> <span class=\"n\">n</span>\n    <span class=\"k\">return</span> <span class=\"n\">s</span><span class=\"p\">[:</span><span class=\"n\">n</span><span class=\"p\">]</span>\n</code></pre></div></div>\n\n<h3 id=\"소감\"><em>소감</em></h3>\n<ul>\n  <li>허무하게도 저렇게 간단한 방법이 있었다니… 분발해야겠다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 스트링을 숫자로 바꾸기",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/05/30/tryhelloworld-level1-3-1.html",
      "date"     : "2017-05-30 00:00:00 +0900",
      "content"   : "<h2 id=\"스트링을-숫자로-바꾸기\">스트링을 숫자로 바꾸기</h2>\n<p>strToInt 메소드는 String형 str을 매개변수로 받습니다.</p>\n\n<p>str을 숫자로 변환한 결과를 반환하도록 strToInt를 완성하세요.</p>\n\n<p>예를들어 str이 “1234”이면 1234를 반환하고, “-1234”이면 -1234를 반환하면 됩니다.</p>\n\n<p>str은 부호(+,-)와 숫자로만 구성되어 있고, 잘못된 값이 입력되는 경우는 없습니다.</p>\n\n<ul>\n  <li>내가 푼 것</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">strToInt</span><span class=\"p\">(</span><span class=\"n\">String</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    \t<span class=\"k\">return</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">strToInt</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">25</span><span class=\"p\">));</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 정수제곱근 판별하기",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/05/29/tryhelloworld-level1-2-3.html",
      "date"     : "2017-05-29 00:00:00 +0900",
      "content"   : "<h2 id=\"정수제곱근-판별하기\">정수제곱근 판별하기</h2>\n<p>nextSqaure함수는 정수 n을 매개변수로 입력받습니다.</p>\n\n<p>n이 임의의 정수 x의 제곱이라면 x+1의 제곱을 리턴하고, n이 임의의 정수 x의 제곱이 아니라면 ‘no’을 리턴하는 함수를 완성하세요.</p>\n\n<p>예를들어 n이 121이라면 이는 정수 11의 제곱이므로 (11+1)의 제곱인 144를 리턴하고, 3이라면 ‘no’을 리턴하면 됩니다.</p>\n\n<ul>\n  <li>내가 푼 것</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">nextSqure</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"n\">sqrt</span> <span class=\"o\">=</span> <span class=\"n\">n</span> <span class=\"o\">**</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">sqrt</span> <span class=\"o\">%</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n    \t<span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">sqrt</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n    <span class=\"k\">return</span> <span class=\"s\">\"no\"</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"결과 : {}\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">nextSqure</span><span class=\"p\">(</span><span class=\"mi\">169</span><span class=\"p\">)));</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">nextSqure</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">**</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"n\">n</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n    <span class=\"k\">return</span> <span class=\"s\">\"no\"</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 제일 작은 수 제거하기",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/05/29/tryhelloworld-level1-2-2.html",
      "date"     : "2017-05-29 00:00:00 +0900",
      "content"   : "<h2 id=\"제일-작은-수-제거하기\">제일 작은 수 제거하기</h2>\n<p>rm_small함수는 list타입 변수 mylist을 매개변수로 입력받습니다.</p>\n\n<p>mylist 에서 가장 작은 수를 제거한 리스트를 리턴하고, mylist의 원소가 1개 이하인 경우는 []를 리턴하는 함수를 완성하세요.</p>\n\n<p>예를들어 mylist가 [4,3,2,1]인 경우는 [4,3,2]를 리턴 하고, [10, 8, 22]면 [10, 22]를 리턴 합니다.</p>\n\n<ul>\n  <li>내가 푼 것</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">rm_small</span><span class=\"p\">(</span><span class=\"n\">mylist</span><span class=\"p\">):</span>\n    <span class=\"nb\">min</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">mylist</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n    \t<span class=\"n\">mylist</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">min</span> <span class=\"o\">=</span> <span class=\"n\">mylist</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">mylist</span><span class=\"p\">)):</span>\n            <span class=\"k\">if</span> <span class=\"nb\">min</span> <span class=\"o\">&gt;</span> <span class=\"n\">mylist</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]:</span>\n                <span class=\"nb\">min</span> <span class=\"o\">=</span> <span class=\"n\">mylist</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n        <span class=\"n\">mylist</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">mylist</span>\n\n<span class=\"n\">my_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"결과 {} \"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">rm_small</span><span class=\"p\">(</span><span class=\"n\">my_list</span><span class=\"p\">)))</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">rm_small</span><span class=\"p\">(</span><span class=\"n\">mylist</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">mylist</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&gt;</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">mylist</span><span class=\"p\">)]</span>\n</code></pre></div></div>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">rm_small</span><span class=\"p\">(</span><span class=\"n\">mylist</span><span class=\"p\">):</span>\n    <span class=\"k\">del</span><span class=\"p\">(</span><span class=\"n\">mylist</span><span class=\"p\">[</span><span class=\"n\">mylist</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">mylist</span><span class=\"p\">))])</span>\n    <span class=\"k\">return</span> <span class=\"n\">mylist</span>\n</code></pre></div></div>\n\n<h3 id=\"소감\"><em>소감</em></h3>\n<ul>\n  <li>for문 사용을 줄이고 파이써닉한 내장 함수를 잘 활용하도록 노력해야겠다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 짝수와 홀수",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/05/29/tryhelloworld-level1-2-1.html",
      "date"     : "2017-05-29 00:00:00 +0900",
      "content"   : "<h2 id=\"짝수와-홀수\">짝수와 홀수</h2>\n<p>evenOrOdd 메소드는 int형 num을 매개변수로 받습니다. num이 짝수일 경우 “Even”을 반환하고 홀수인 경우 “Odd”를 반환하도록 evenOrOdd에 코드를 작성해 보세요.</p>\n\n<p>num은 0이상의 정수이며, num이 음수인 경우는 없습니다.</p>\n\n<ul>\n  <li>내가 푼 것</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">evenOrOdd</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n  <span class=\"k\">return</span> <span class=\"s\">\"Even\"</span> <span class=\"k\">if</span> <span class=\"n\">num</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"s\">\"Odd\"</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"결과 : \"</span> <span class=\"o\">+</span> <span class=\"n\">evenOrOdd</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"결과 : \"</span> <span class=\"o\">+</span> <span class=\"n\">evenOrOdd</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">evenOrOdd</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">num</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"ow\">and</span> <span class=\"s\">\"Odd\"</span> <span class=\"ow\">or</span> <span class=\"s\">\"Even\"</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 자릿수 더하기",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/05/28/tryhelloworld-level1-1-4.html",
      "date"     : "2017-05-28 00:00:00 +0900",
      "content"   : "<h2 id=\"자릿수-더하기\">자릿수 더하기</h2>\n<p>sum_digit함수는 자연수를 전달 받아서 숫자의 각 자릿수의 합을 구해서 return합니다.\n예를들어 number = 123이면 1 + 2 + 3 = 6을 return하면 됩니다.\nsum_digit함수를 완성해보세요.</p>\n\n<ul>\n  <li>내가 푼 것</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">sum_digit</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">):</span>\n    <span class=\"n\">str_num</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">)</span>\n    <span class=\"c\"># bowl = \"\"</span>\n    <span class=\"nb\">sum</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">str_num</span><span class=\"p\">)):</span>\n        <span class=\"nb\">sum</span> <span class=\"o\">+=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">str_num</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"c\"># if i == len(str_num) - 1:</span>\n        <span class=\"c\">#     bowl += str_num[i] + \"=\"</span>\n        <span class=\"c\"># else:</span>\n        <span class=\"c\">#     bowl += str_num[i] + \"+\"</span>\n\n    <span class=\"k\">return</span> <span class=\"nb\">sum</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"결과 : {}\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">sum_digit</span><span class=\"p\">(</span><span class=\"mi\">123</span><span class=\"p\">)));</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">sum_digit</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">number</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">number</span><span class=\"p\">;</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">number</span> <span class=\"o\">%</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">sum_digit</span><span class=\"p\">(</span><span class=\"n\">number</span> <span class=\"o\">//</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">average</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">):</span>\n    <span class=\"n\">avg</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"nb\">sum</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n    \t<span class=\"nb\">sum</span> <span class=\"o\">+=</span> <span class=\"n\">i</span>\n\n    <span class=\"n\">avg</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span> <span class=\"o\">/</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">avg</span>\n\n<span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"평균값 : {}\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">average</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)));</span>\n</code></pre></div></div>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 평균 구하기",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/05/28/tryhelloworld-level1-1-3.html",
      "date"     : "2017-05-28 00:00:00 +0900",
      "content"   : "<h2 id=\"평균-구하기\">평균 구하기</h2>\n<p>함수를 완성해서 매개변수 list의 평균값을 return하도록 만들어 보세요.\n어떠한 크기의 list가 와도 평균값을 구할 수 있어야 합니다.</p>\n\n<ul>\n  <li>내 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">average</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">):</span>\n    <span class=\"n\">avg</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"nb\">sum</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n    \t<span class=\"nb\">sum</span> <span class=\"o\">+=</span> <span class=\"n\">i</span>\n\n    <span class=\"n\">avg</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span> <span class=\"o\">/</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">avg</span>\n\n<span class=\"c\"># 아래는 테스트로 출력해 보기 위한 코드입니다.</span>\n<span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"평균값 : {}\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">average</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)));</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">average</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">return</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n\n<span class=\"c\"># 아래는 테스트로 출력해 보기 위한 코드입니다.</span>\n<span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"평균값 : {}\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">average</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)));</span>\n</code></pre></div></div>\n\n<h3 id=\"소감\"><em>소감</em></h3>\n<ul>\n  <li>sum() 메서드를 활용하면 더욱 간단하다는 것을 알게됐다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 핸드폰 번호 가리기",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/05/28/tryhelloworld-level1-1-2.html",
      "date"     : "2017-05-28 00:00:00 +0900",
      "content"   : "<h2 id=\"핸드폰-번호-가리기\">핸드폰 번호 가리기</h2>\n\n<p>별이는 헬로월드텔레콤에서 고지서를 보내는 일을 하고 있습니다.</p>\n\n<p>개인정보 보호를 위해 고객들의 전화번호는 맨 뒷자리 4자리를 제외한 나머지를 ` * ` 으로 바꿔야 합니다.</p>\n\n<p>전화번호를 문자열 s로 입력받는 hide_numbers함수를 완성해 별이를 도와주세요.</p>\n\n<p>예를들어 s가 01033334444 면 *******4444 를 리턴하고, 027778888 인 경우는 *****8888 을 리턴하면 됩니다.</p>\n\n<ul>\n  <li>내가 푼 것</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">hide_numbers</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"n\">hide</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">4</span>\n    <span class=\"n\">change</span> <span class=\"o\">=</span> <span class=\"s\">'*'</span> <span class=\"o\">*</span> <span class=\"n\">hide</span>\n    <span class=\"k\">return</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"n\">hide</span><span class=\"p\">],</span> <span class=\"n\">change</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"결과 : \"</span> <span class=\"o\">+</span> <span class=\"n\">hide_numbers</span><span class=\"p\">(</span><span class=\"s\">'01033334444'</span><span class=\"p\">));</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">re</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">hide_numbers</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"nb\">compile</span><span class=\"p\">(</span><span class=\"s\">r'\\d(?=\\d{4})'</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s\">\"*\"</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"c\"># 아래는 테스트로 출력해 보기 위한 코드입니다.</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"결과 : \"</span> <span class=\"o\">+</span> <span class=\"n\">hide_numbers</span><span class=\"p\">(</span><span class=\"s\">'01033334444'</span><span class=\"p\">));</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"결과 : \"</span> <span class=\"o\">+</span> <span class=\"n\">hide_numbers</span><span class=\"p\">(</span><span class=\"s\">'027778888'</span><span class=\"p\">));</span>\n</code></pre></div></div>\n\n<h3 id=\"소감\"><em>소감</em></h3>\n<ul>\n  <li>정규표현식을 활용한 풀이가 와닿았다. 다음에 정규표현식으로 문제에 접근해봐야지!</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "[Try Hello World] Level1 x만큼 간격이 있는 n개의 숫자",
      "category" : "Solve Algorithm!tryhelloworld",
      "tags"     : "Alogorithm, Level1",
      "url"      : "/solve%20algorithm!/tryhelloworld/2017/05/28/tryhelloworld-level1-1-1.html",
      "date"     : "2017-05-28 00:00:00 +0900",
      "content"   : "<h2 id=\"x만큼-간격이-있는-n개의-숫자\">x만큼 간격이 있는 n개의 숫자</h2>\n<p>number_generator함수는 x와 n을 입력 받습니다.</p>\n\n<p>2와 5를 입력 받으면 2부터 시작해서 2씩 증가하는 숫자를 5개 가지는 리스트를 만들어서 리턴합니다.</p>\n\n<p>[2,4,6,8,10]</p>\n\n<p>4와 3을 입력 받으면 4부터 시작해서 4씩 증가하는 숫자를 3개 가지는 리스트를 만들어서 리턴합니다.</p>\n\n<p>[4,8,12]</p>\n\n<p>이를 일반화 하면 x부터 시작해서 x씩 증가하는 숫자를 n개 가지는 리스트를 리턴하도록 함수 number_generator를 완성하면 됩니다.</p>\n\n<ul>\n  <li>내가 푼 것</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">number_generator</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"nb\">list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"nb\">list</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">number_generator</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<ul>\n  <li>다른 사람 풀이</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">number_generator</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">number_generator</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<h3 id=\"소감\"><em>소감</em></h3>\n<ul>\n  <li>컴프리헨션 공부하자!</li>\n</ul>\n"
    } 
  
  ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
        "title"    : "Tags",
        "category" : "",
        "tags"     : "",
        "url"      : "/tags/",
        "date"     : "",
        "content"  : "<!-- <div class=\"tags\">\n  <div class=\"tag-cloud\">\n    {% for tag in site.tags %}\n      <span style=\"font-size: {{ tag | last | size | times: 100 | divided_by: site.tags.size | plus: 70  }}%\">\n        <a href=\"#{{ tag | first | slugize }}\">\n          {{ tag | first }}\n        </a> &nbsp;&nbsp;\n      </span>\n    {% endfor %}\n  </div>\n</div> -->\n\n<section class=\"tag-container\">\n  {% for tag in site.tags %}\n    <ul class=\"tag-category\">\n      {% capture tag_name %}{{ tag | first }}{% endcapture %}\n      <p class=\"tag-category-title\" id=\"#{{ tag_name | slugize }}\">{{ tag_name }}</p>\n      <a name=\"{{ tag_name | slugize }}\"></a>\n      {% for post in site.tags[tag_name] %}\n      <li class=\"tag-category-list\">\n        <p class=\"post-date\">\n          {{ post.date | date_to_string }}\n        </p>\n        <a class=\"post-title\" href=\"{{ root_url }}{{ post.url }}\">{{post.title}}</a>\n      </li>\n      {% endfor %}\n    </ul>\n  {% endfor %}\n</section>\n"
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } 
  
]
